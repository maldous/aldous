---
# Source: kong/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-kong-validation-webhook-ca-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRRVRxRjFITWVodDhFenNSbDhSSy9jekFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEE0TURZd016TTFNVGxhRncwegpOVEE0TURRd016TTFNVGxhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJrOUk4VHI5RWdCS1dEdCtOL3lGdjBwUk9zanMKZTFBYTMvQzZUQjVoYzVGTW5EeFhTYXE5Szh4L3lBbExRNlZTVVh1UERpNUVlcnlVY2dXRXE5bWNVWDc3YVBSSwpISlN5aFdjU0hIVC9vMWx5TE15QmlmMlVCVTFtQUtUZHA0Z0dnM2FVUUZVYVg3ZTN2aVlFUTg0K2dnZ3JYUjRkClJjUHZZZE5maWFRNElKWG93aStWSkhVNVR2ODM3M1hpeTRmazRSM1ZnYjMzRVV3NHdrODRTSlhPaVRkY3o4ZkEKQmVnYktNeDFJay8rQVF2RGtIWE9iWXoyTGRDK1llUU95c2V1VUNnMFN6TEd1N3l5QzBEMGwrU0tSdHZRdTl6YgpJZ0pEOFBhSVRDc2NQNFpMeWV6YWQxODBDSnBSMmFHenB1cG83VndnTXRLbm51d2laTXN6N04vbUFRSURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJUFV6WXlCY1hXWVk1a0dNVHJhcnFSdQpWRHM1TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBTXJjSnVKbWt0QS9qbU02eWp4WXlvTVVieGNCRkRYZUprCjFLZWVZOXMvWFNYMndiKzROSFk1SURrcXVSZ0N4bWV3T2o4L3d2RzY4azR1ZmJ3RE1TVlIrZDU4Q2YyTGtJS3YKbExUa2FZb3NnNGZ1cUJhb3NLVXJKMkhtY3d6RzFLQ0hXczY2YzgrUERicHMvQy9yMmx0WUJyRDdnazZMYlNheApXcEw0ZElUOGdzRmlOeTYxbWh2VHpEbXVRUWJ4SlFHREduZkNiTHJaRStPdXpxTVgyaDBmNWRSZ0JDV1g1RUJoCjZUQWk3ZDE3cGxrUFlxUTJ2NDFWUGE0QlNJZmFLeFNYeDlPY2R3MWpHR09zQ3d5QnlXbWJNcnJIWlR6TFluUCsKWUI1N2dzSFhrZDU2MFBEUEdDSDhETnBHelRwUlFvZHlvTjM1UGhLNWdEcFZvVmxZV3FqWQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcms5SThUcjlFZ0JLV0R0K04veUZ2MHBST3Nqc2UxQWEzL0M2VEI1aGM1Rk1uRHhYClNhcTlLOHgveUFsTFE2VlNVWHVQRGk1RWVyeVVjZ1dFcTltY1VYNzdhUFJLSEpTeWhXY1NISFQvbzFseUxNeUIKaWYyVUJVMW1BS1RkcDRnR2czYVVRRlVhWDdlM3ZpWUVRODQrZ2dnclhSNGRSY1B2WWROZmlhUTRJSlhvd2krVgpKSFU1VHY4MzczWGl5NGZrNFIzVmdiMzNFVXc0d2s4NFNKWE9pVGRjejhmQUJlZ2JLTXgxSWsvK0FRdkRrSFhPCmJZejJMZEMrWWVRT3lzZXVVQ2cwU3pMR3U3eXlDMEQwbCtTS1J0dlF1OXpiSWdKRDhQYUlUQ3NjUDRaTHllemEKZDE4MENKcFIyYUd6cHVwbzdWd2dNdEtubnV3aVpNc3o3Ti9tQVFJREFRQUJBb0lCQUVDeDVKekVEQkdXVWdHVgpjeTlNWmtldFNhREwyaG1halo3NE5lenlpYkRmQ05Ra0FUR3lVU3ZrWnJqVDJqOXRLTFJkYTZjVHZRN2cxeWZLCnJJY3I2VHpHS0lHM3labjZCcGhFdlJBYXpKYlFKL1JBb3dPWVBrd0pnZ1pUS29GM2x4TkwrNUkxQStqcXd5T3IKOElGS0Z5RWo3eFJNalFqTHhCbEczbnF6bkxGYTFObi8zUlIxZGhxQU41aGJZZUs5anZOMHZTNDNFZ2ZFaEN3RwpTZ01pT0thZVRHeTBzN2RXVGJmcDk2dmVaTUZkZDlqVFBOUEFidDcxSE96OTBzVTBtQUVtSWRMckhFaGNRNjZPCjBXSi9sU1VWdHcvNVZpMXJLeW5LWFlGQ1VNWXMxZVM4UGxlTmNkMHZsL2RycFNlay80bnk2YVBaTDVYZWRxSm8KZHpSTTlSRUNnWUVBd0NaL0RaRzI0NDRyY3VLUzRLVTNIeXVNQzhaU2xaSUZrVGRQYyszZmJlUWFRaWxuTUFpNApTN1prZkpvb2IxTUVOSWpuNnVZSlhkbDd4Y2xvYXZza2hJOVBLN2l0RTV4ZmdtR1hTZlkzN29wNnZnZXJJRUNaCi91K3RaZXJlWllucjVwMlNneWM4eTRlSDA3SVJ6RkVtWEVyODliTngreWhkdURTeEcrbU1vZ2NDZ1lFQTZEc20KaW5sLzlkcUdYdlN3NDBUdFJyQVpseTdadDgrZGEzYURiZDZQM0J4T0hkd2YrcXB4T0ZVbXJrQkZXeno0Mm9lZwpoVjJ5ZHdrNmlOZ3c0REM1Q3AvUitNWkFWSDJ6WEd6NUJjSzJGWSs1aisyOURZaGE2eEtuL1VEWC91Y2l5d2ppCk03MzRvYnJ4TGszcTlOQmdLSmxBc080OEkyYWZIMTYyMmQ0bWxiY0NnWUVBbFBzRUZZUStGZzc3OXhaZkpSaFUKTmJHdzRzeEE2Y0VPMmZuVmU2QWFWUHkvc3o2Z3graHE1Q0VscGtwc1FXeFBYV0FzMkw3RTBtUTJpRExSNStpUwo5c2lhYk43Q0t1dGFUaC9XaWowQ1BzeFZ3SkwzaG9rd0hTNjk5Y0IxOEtwUUlqMVlCS0plaTd1b2YyV1lVUjgyCksrYmtYS2htSG9LOHIzOEROdzRNd084Q2dZQlgwMjdxOWJJMzkzSFQzWFE4THlnUkVLNU01N0g4K3U2TTRxQW4KNEFERi9JcHFib0pGbVVvQ1JPbkJBcHQ0T3VIZU8yYXdxVlBDQXVKNU9GR2JwN0dEWEJmYm5wWmJuY0pFVlE0RQphTFBXQ2FuaXpjVXVwZi9FWVNUWStUbjJzOUVMdWd0YUNDRk1nTmVQYkhaTUtiWUVCSmxia0cxNzhlYUJ4WjhmClhBMTVsd0tCZ0NuaFZiNUgzZ1M3ZXF2czROQ01XMkJlVUFzWW5TazdGYndsSUxNM2ZYUDcvNkxjMUNiRWVvWnAKTko2eXNieDdaQlR3NmVqVWRSWWJFV3dDRi9WVllZby90YVR3N2pWQjRhQi9JWEthT3M2OUpNcXErYWxEVHptegp0NXk3M0FXYzNaRThybnZ4aWpZSThHd1RsNVVUUldBZXUvQmZPaFMrc2dlL1Z0cGxQN1ZKCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-kong-validation-webhook-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjVENDQWxtZ0F3SUJBZ0lSQU1DYncwbGJUOXlzSzE0aHpJUDJiN0V3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalV3T0RBMk1ETXpOVEU1V2hjTgpNelV3T0RBME1ETXpOVEU1V2pBek1URXdMd1lEVlFRREV5aHJiMjVuTFd0dmJtY3RkbUZzYVdSaGRHbHZiaTEzClpXSm9iMjlyTG1SbFptRjFiSFF1YzNaak1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTQxNE9OQVJUNnFhYXMwUXRJUnBKcXhVV253OHdvQ0NSQ3phekljTHZTRllXZzdGR1dsYUVTeVpVaC82MgpSUDJFM0NoZ2ozMVZvck90dXVjdmZ5OHNHRHEzUE9rSjMrNUlLNDJ3ZXQ1bjZIMTNma0ZwTzh6QXZvenB1cmNUClR6VzZLMnE3eGxwWno5dmdVVWFmS0ZnRktZZXhCMWRwcHNKZ21jQzRZMVdLOVlMcU5xYnlST0lKa2c3SUdHdi8Kc0JRMXNoRGNScTlxVGdFN0FNUTFYejRsZWVaUzQ2YVd0cEJ6VjZVbU9uQXcyTUhIM1lOTVVBNXBML3l0WXdOTwo5SFhTTUdjOUJVeWZoM2J0N1N5ZnUrLzdHNDNCdllUT1BHcndXb2dTZ2Q4YmxmWWNNSTMwNXd3bGx0SkR0L3FaClUvOHlPMFE5alBkbmNzOTF5Ulpnc0Q4M0V3SURBUUFCbzRHV01JR1RNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVgpIU01FR0RBV2dCU0QxTTJNZ1hGMW1HT1pCakU2MnE2a2JsUTdPVEF6QmdOVkhSRUVMREFxZ2locmIyNW5MV3R2CmJtY3RkbUZzYVdSaGRHbHZiaTEzWldKb2IyOXJMbVJsWm1GMWJIUXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQkFRQjZmNkhRcjdxVTRzdmpQR3JDd3RtWFJ3TXh0Qjhad3pQM1VrSnJBSXhWd3lsVmpNR0IyOWg4a0g3Mwo2ZzUwVE5XZlZDMzlWNmF0TGhLQThPamsySERtRUU4M2o3aVArVzFUVVZnc0FiK3dMcHdLN1g2alRIRmRrUCtLClVsMzVMMU11RGY1MmVIUDVEK1QzRzhzSmxBYXJoeXkzVEx6OG9KNzdoY0REZVV1SFVNVWYyOFBKZVRrQU1KNGgKU2MzUmxRVDdvMDRQa3FOSU1uZDIyNGxxQi9TeXIrV3ZuMGx1SG1HL0NSR0l3ckZ6eFZ4ck1oTVBZRUtoS3Y3cQo2Z3AvSXFrSjRKdWYxSkRuU0o3RFgzcHVoVXh0OElqQnVRbUZtR1FnWGJWbGVKL2Z6SzZUSGRNUDlueEhpWlovCi9UeTJrZ01HL3plNGFlMEVyclVHTHk3MGtlL1cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNDE0T05BUlQ2cWFhczBRdElScEpxeFVXbnc4d29DQ1JDemF6SWNMdlNGWVdnN0ZHCldsYUVTeVpVaC82MlJQMkUzQ2hnajMxVm9yT3R1dWN2Znk4c0dEcTNQT2tKMys1SUs0MndldDVuNkgxM2ZrRnAKTzh6QXZvenB1cmNUVHpXNksycTd4bHBaejl2Z1VVYWZLRmdGS1lleEIxZHBwc0pnbWNDNFkxV0s5WUxxTnFieQpST0lKa2c3SUdHdi9zQlExc2hEY1JxOXFUZ0U3QU1RMVh6NGxlZVpTNDZhV3RwQnpWNlVtT25BdzJNSEgzWU5NClVBNXBML3l0WXdOTzlIWFNNR2M5QlV5ZmgzYnQ3U3lmdSsvN0c0M0J2WVRPUEdyd1dvZ1NnZDhibGZZY01JMzAKNXd3bGx0SkR0L3FaVS84eU8wUTlqUGRuY3M5MXlSWmdzRDgzRXdJREFRQUJBb0lCQVFDSDJBWThaZW1OWlFWQQozaGJvbEVBM2kxMzhvcUsyeVQ1ZnFNclYvUlhoN2kxOWVVbERhRFdhZ01nNGlLSjJEZEozaDFoSjR1UnJWVmNUCk9GVlVjK2F3ZzBRL2pDeHVNbnZFS2QrclNYNWpsYkx6S0RtcmxPWUQ4MFVpWFllWDU4M1hhdW5OMU9XY0h3NmoKQU1MTzQrZ1JyQlRGQWlFSmxWRUtDKzhleWxrLzNWdVlpUitvTmNRdjFmbThwbDlNL2Eyd0xCTHZIbDBuVEVuMApEdjA0RzFFQm1lL3ZrcXdsMHJsSWFCSVlrTGk2eGMyblZqYlNyZ0EwY0dpQlNTVkJxRWtFZ1ZPMytUcVZaVTJjCjlnV1ZyS2lLWldFclM5Y0NJaVo5cStwYkViMm5YYnNwRVlMVU5nSWE1Z0c1eVNGN1BWa1hTYjdMZjl6QXF6WksKT1hBZXFtUUJBb0dCQVBkZHZSVVVIeDlTajVBZDRWN2kzYlFhYjRCL1FuNEJCeXl4V1JEckM4N0N5SVRLQzVXZwpUdHc5T2l4WStueWEydkNoVHNlNE5HdVhOVjZXTzQvSkRrTlVTeWFBVU1JYTFPTEV6WENLb1huQ1dIV0NKb3dOClEwdjdWRWROWkFjd0NuaFpjTHJwTWZGNVZGR1VKa1phTUxaVVEzUThpL0VvMzFmSURoSGZtWEtCQW9HQkFPdE4KbjlPMi9VSFI2Q0VoaUh2bjFEeURaMGY4eEVTdTA5QlVBOXhPbGpzNVIrWkJJVVQ1U1pLSVJkTDlJdGpBeG1JeQp5cGJKK3FsWWk3T2hWTkd4WHNEb3dIb0xjMEhoNWY0UkpzSWRqQ0Z1Q2VOOVVRSzZIako3WU5PMkFwRkVDQ0VDCnV5RzgxV0JpWUFZc2NOank5bU8xTVFYWThPTU0rblEzbGo2WnFQZVRBb0dBWUFET2NJN1ZvVmR1aGxWQ2NZd0UKMVhCcEUrclFDSTBubHEzaHpsSWF6QTBHdTVxYXNtQjhHcmZjaXZlaGg1aW1IanZNa25Db1Q1Vm96aVBxUzl5UgpINHBvZkRIU3BmSzU2cVRNd3IvYSthRjJxV3h3djJ3cVVTUGl5cVY3aTlxV1JhMFl0a0hvOHpuT2dyYkh3QWdpCjNiQ0lXV1ZpUHA5SlJ3MUtnSjlTTTRFQ2dZQXcwblJkRzFURStXYXVxU1NHZ1AyYWFMRmZVR1R3MDAyRHBrcisKeFJlS3hrSFMxcVN1aVFMbzhubDZZNmQ5VGRKYndhb2pTMWxGRmVnMnB6elFIWHRKajRHUVVSdmpDWm9NODBZVgpkTWdFajY1aGt6amgxZmc2QlR0NzhnSHFYakZKbUNWM3hKU0pZU0FIWitVcVBvODg5UFZzL3l4TUQvOVBhZEUwCnYvRTlIUUtCZ0IxaWZTWGNCMjUwdUo2TXdnSVdCWG8rb05QbGgrc01KV0Nyd0VWbU1kNE9Ma01OVCt5eEVXUzYKVjNvTERtRldRdm5iOVRYUXg5S3JXSG0zTzFLdUtrVUw2UXZObE1mblRqZ0tTS29rdXI4dEhKQk1wMUFJbE1kWgpwZzVmanVodHBrRTRsKzFDc0h6QTdOaHd0WkU4ZVVVcy9NcTUrUE5QbGxpLzF6THFqRXVECi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
  name: kong-kong
rules:

- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants/status
  verbs:
  - get
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-kong
subjects:
  - kind: ServiceAccount
    name: kong-kong
    namespace: default
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kong-kong
subjects:
  - kind: ServiceAccount
    name: kong-kong
    namespace: default
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-validation-webhook
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
    app.kubernetes.io/component: app
---
# Source: kong/templates/controller-service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-metrics
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
spec:
  ports:
  - name: cmetrics
    port: 10255
    protocol: TCP
    targetPort: cmetrics
  - name: status
    port: 10254
    protocol: TCP
    targetPort: cstatus
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
    app.kubernetes.io/component: app
---
# Source: kong/templates/service-kong-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-admin
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
spec:
  type: NodePort
  ports:
  - name: kong-admin
    port: 8001
    targetPort: 8001
    protocol: TCP
  - name: kong-admin-tls
    port: 8444
    targetPort: 8444
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: kong/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-manager
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
spec:
  type: NodePort
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  - name: kong-manager-tls
    port: 8445
    targetPort: 8445
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: kong/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
    enable-metrics: "true"
spec:
  type: LoadBalancer
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: kong/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-kong
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "kong"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: kong-kong-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.7"
        app.kubernetes.io/component: app
        app: kong-kong
        
        version: "3.7"
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: localhost:32000/kong-oidc:3.7.0
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001, 0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https"
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "0.0.0.0/0,::/0"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "kong"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          value: "kong"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          value: "kong"
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
      - name: wait-for-db
        image: localhost:32000/kong-oidc:3.7.0
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001, 0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https"
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "0.0.0.0/0,::/0"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "kong"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          value: "kong"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          value: "kong"
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        
      
        args: [ "/bin/bash", "-c", "export KONG_NGINX_DAEMON=on KONG_PREFIX=`mktemp -d` KONG_KEYRING_ENABLED=off; until kong start; do echo 'waiting for db'; sleep 1; done; kong stop"]
        volumeMounts:
          - name: kong-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-kong-tmp
            mountPath: /tmp
          
        resources:
          {}
      containers:
      - name: ingress-controller
        securityContext:
      
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        - name: cstatus
          containerPort: 10254
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONGHQ_COM_GLOBAL_PLUGINS
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_URL
          value: "https://localhost:8444"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "default/kong-kong-proxy"
        
        image: kong/kubernetes-ingress-controller:3.5
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: kong-kong-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
      
      - name: "proxy"
        image: localhost:32000/kong-oidc:3.7.0
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001, 0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https"
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "0.0.0.0/0,::/0"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "kong"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          value: "kong"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          value: "kong"
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: admin
          containerPort: 8001
          protocol: TCP
        - name: admin-tls
          containerPort: 8444
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: kong-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-kong-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kong-kong-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: kong-kong-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: kong-kong-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - name: webhook-cert
          secret:
            secretName: kong-kong-validation-webhook-keypair
---
# Source: kong/templates/migrations.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-kong-init-migrations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
    app.kubernetes.io/component: init-migrations
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  backoffLimit: 
  template:
    metadata:
      name: kong-init-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.7"
        app.kubernetes.io/component: init-migrations
      annotations:
        sidecar.istio.io/inject: "false"
        kuma.io/service-account-token-volume: kong-kong-token
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      containers:
      - name: kong-migrations
        image: localhost:32000/kong-oidc:3.7.0
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault 
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001, 0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https"
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "0.0.0.0/0,::/0"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "kong"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          value: "kong"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          value: "kong"
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        args: [ "kong", "migrations", "bootstrap" ]
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
        
        resources:
          {}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: kong-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: kong-kong-validation-webhook-keypair
---
# Source: kong/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: kong-kong-default-validations
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRRVRxRjFITWVodDhFenNSbDhSSy9jekFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEE0TURZd016TTFNVGxhRncwegpOVEE0TURRd016TTFNVGxhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJrOUk4VHI5RWdCS1dEdCtOL3lGdjBwUk9zanMKZTFBYTMvQzZUQjVoYzVGTW5EeFhTYXE5Szh4L3lBbExRNlZTVVh1UERpNUVlcnlVY2dXRXE5bWNVWDc3YVBSSwpISlN5aFdjU0hIVC9vMWx5TE15QmlmMlVCVTFtQUtUZHA0Z0dnM2FVUUZVYVg3ZTN2aVlFUTg0K2dnZ3JYUjRkClJjUHZZZE5maWFRNElKWG93aStWSkhVNVR2ODM3M1hpeTRmazRSM1ZnYjMzRVV3NHdrODRTSlhPaVRkY3o4ZkEKQmVnYktNeDFJay8rQVF2RGtIWE9iWXoyTGRDK1llUU95c2V1VUNnMFN6TEd1N3l5QzBEMGwrU0tSdHZRdTl6YgpJZ0pEOFBhSVRDc2NQNFpMeWV6YWQxODBDSnBSMmFHenB1cG83VndnTXRLbm51d2laTXN6N04vbUFRSURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJUFV6WXlCY1hXWVk1a0dNVHJhcnFSdQpWRHM1TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBTXJjSnVKbWt0QS9qbU02eWp4WXlvTVVieGNCRkRYZUprCjFLZWVZOXMvWFNYMndiKzROSFk1SURrcXVSZ0N4bWV3T2o4L3d2RzY4azR1ZmJ3RE1TVlIrZDU4Q2YyTGtJS3YKbExUa2FZb3NnNGZ1cUJhb3NLVXJKMkhtY3d6RzFLQ0hXczY2YzgrUERicHMvQy9yMmx0WUJyRDdnazZMYlNheApXcEw0ZElUOGdzRmlOeTYxbWh2VHpEbXVRUWJ4SlFHREduZkNiTHJaRStPdXpxTVgyaDBmNWRSZ0JDV1g1RUJoCjZUQWk3ZDE3cGxrUFlxUTJ2NDFWUGE0QlNJZmFLeFNYeDlPY2R3MWpHR09zQ3d5QnlXbWJNcnJIWlR6TFluUCsKWUI1N2dzSFhrZDU2MFBEUEdDSDhETnBHelRwUlFvZHlvTjM1UGhLNWdEcFZvVmxZV3FqWQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kong-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: "konghq.com/credential"
      operator: "Exists"
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRRVRxRjFITWVodDhFenNSbDhSSy9jekFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEE0TURZd016TTFNVGxhRncwegpOVEE0TURRd016TTFNVGxhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJrOUk4VHI5RWdCS1dEdCtOL3lGdjBwUk9zanMKZTFBYTMvQzZUQjVoYzVGTW5EeFhTYXE5Szh4L3lBbExRNlZTVVh1UERpNUVlcnlVY2dXRXE5bWNVWDc3YVBSSwpISlN5aFdjU0hIVC9vMWx5TE15QmlmMlVCVTFtQUtUZHA0Z0dnM2FVUUZVYVg3ZTN2aVlFUTg0K2dnZ3JYUjRkClJjUHZZZE5maWFRNElKWG93aStWSkhVNVR2ODM3M1hpeTRmazRSM1ZnYjMzRVV3NHdrODRTSlhPaVRkY3o4ZkEKQmVnYktNeDFJay8rQVF2RGtIWE9iWXoyTGRDK1llUU95c2V1VUNnMFN6TEd1N3l5QzBEMGwrU0tSdHZRdTl6YgpJZ0pEOFBhSVRDc2NQNFpMeWV6YWQxODBDSnBSMmFHenB1cG83VndnTXRLbm51d2laTXN6N04vbUFRSURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJUFV6WXlCY1hXWVk1a0dNVHJhcnFSdQpWRHM1TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBTXJjSnVKbWt0QS9qbU02eWp4WXlvTVVieGNCRkRYZUprCjFLZWVZOXMvWFNYMndiKzROSFk1SURrcXVSZ0N4bWV3T2o4L3d2RzY4azR1ZmJ3RE1TVlIrZDU4Q2YyTGtJS3YKbExUa2FZb3NnNGZ1cUJhb3NLVXJKMkhtY3d6RzFLQ0hXczY2YzgrUERicHMvQy9yMmx0WUJyRDdnazZMYlNheApXcEw0ZElUOGdzRmlOeTYxbWh2VHpEbXVRUWJ4SlFHREduZkNiTHJaRStPdXpxTVgyaDBmNWRSZ0JDV1g1RUJoCjZUQWk3ZDE3cGxrUFlxUTJ2NDFWUGE0QlNJZmFLeFNYeDlPY2R3MWpHR09zQ3d5QnlXbWJNcnJIWlR6TFluUCsKWUI1N2dzSFhrZDU2MFBEUEdDSDhETnBHelRwUlFvZHlvTjM1UGhLNWdEcFZvVmxZV3FqWQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kong-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- name: validations.kong.konghq.com
  matchPolicy: Equivalent
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
      - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - 'v1alpha2'
    - 'v1beta1'
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRRVRxRjFITWVodDhFenNSbDhSSy9jekFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEE0TURZd016TTFNVGxhRncwegpOVEE0TURRd016TTFNVGxhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJrOUk4VHI5RWdCS1dEdCtOL3lGdjBwUk9zanMKZTFBYTMvQzZUQjVoYzVGTW5EeFhTYXE5Szh4L3lBbExRNlZTVVh1UERpNUVlcnlVY2dXRXE5bWNVWDc3YVBSSwpISlN5aFdjU0hIVC9vMWx5TE15QmlmMlVCVTFtQUtUZHA0Z0dnM2FVUUZVYVg3ZTN2aVlFUTg0K2dnZ3JYUjRkClJjUHZZZE5maWFRNElKWG93aStWSkhVNVR2ODM3M1hpeTRmazRSM1ZnYjMzRVV3NHdrODRTSlhPaVRkY3o4ZkEKQmVnYktNeDFJay8rQVF2RGtIWE9iWXoyTGRDK1llUU95c2V1VUNnMFN6TEd1N3l5QzBEMGwrU0tSdHZRdTl6YgpJZ0pEOFBhSVRDc2NQNFpMeWV6YWQxODBDSnBSMmFHenB1cG83VndnTXRLbm51d2laTXN6N04vbUFRSURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJUFV6WXlCY1hXWVk1a0dNVHJhcnFSdQpWRHM1TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBTXJjSnVKbWt0QS9qbU02eWp4WXlvTVVieGNCRkRYZUprCjFLZWVZOXMvWFNYMndiKzROSFk1SURrcXVSZ0N4bWV3T2o4L3d2RzY4azR1ZmJ3RE1TVlIrZDU4Q2YyTGtJS3YKbExUa2FZb3NnNGZ1cUJhb3NLVXJKMkhtY3d6RzFLQ0hXczY2YzgrUERicHMvQy9yMmx0WUJyRDdnazZMYlNheApXcEw0ZElUOGdzRmlOeTYxbWh2VHpEbXVRUWJ4SlFHREduZkNiTHJaRStPdXpxTVgyaDBmNWRSZ0JDV1g1RUJoCjZUQWk3ZDE3cGxrUFlxUTJ2NDFWUGE0QlNJZmFLeFNYeDlPY2R3MWpHR09zQ3d5QnlXbWJNcnJIWlR6TFluUCsKWUI1N2dzSFhrZDU2MFBEUEdDSDhETnBHelRwUlFvZHlvTjM1UGhLNWdEcFZvVmxZV3FqWQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kong-kong-validation-webhook
      namespace: default
---
# Source: kong/templates/migrations-post-upgrade.yaml
# Why is this Job duplicated and not using only helm hooks?
# See: https://github.com/helm/charts/pull/7362
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-kong-post-upgrade-migrations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
    app.kubernetes.io/component: post-upgrade-migrations
  annotations:
    helm.sh/hook: "post-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
spec:
  backoffLimit: 
  template:
    metadata:
      name: kong-post-upgrade-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.7"
        app.kubernetes.io/component: post-upgrade-migrations
      annotations:
        sidecar.istio.io/inject: "false"
        kuma.io/service-account-token-volume: kong-kong-token
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      containers:
      - name: kong-post-upgrade-migrations
        image: localhost:32000/kong-oidc:3.7.0
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault 
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001, 0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https"
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "0.0.0.0/0,::/0"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "kong"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          value: "kong"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          value: "kong"
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        args: [ "kong", "migrations", "finish" ]
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
        
        resources:
          {}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: kong-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: kong-kong-validation-webhook-keypair
---
# Source: kong/templates/migrations-pre-upgrade.yaml
# Why is this Job duplicated and not using only helm hooks?
# See: https://github.com/helm/charts/pull/7362
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-kong-pre-upgrade-migrations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
    app.kubernetes.io/component: pre-upgrade-migrations
  annotations:
    helm.sh/hook: "pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  backoffLimit: 
  template:
    metadata:
      name: kong-pre-upgrade-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.7"
        app.kubernetes.io/component: pre-upgrade-migrations
      annotations:
        sidecar.istio.io/inject: "false"
        kuma.io/service-account-token-volume: kong-kong-token
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      containers:
      - name: kong-upgrade-migrations
        image: localhost:32000/kong-oidc:3.7.0
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001, 0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https"
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "0.0.0.0/0,::/0"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "kong"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          value: "kong"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          value: "kong"
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        args: [ "kong", "migrations", "up" ]
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
        
        resources:
          {}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: kong-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: kong-kong-validation-webhook-keypair
