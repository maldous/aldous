---
# Source: kong/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
spec:
  minAvailable: 1
  unhealthyPodEvictionPolicy: IfHealthyBudget
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      helm.sh/chart: kong-2.51.0
      app.kubernetes.io/instance: "kong"
      app.kubernetes.io/managed-by: "Helm"
      
      app.kubernetes.io/version: "3.11"
      app.kubernetes.io/component: app
---
# Source: kong/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-kong-validation-webhook-ca-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRUS9CRFl1emRLTllkU3MyZVJBaHhWREFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEE0TVRBd01USTBNREZhRncwegpOVEE0TURnd01USTBNREZhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZBT2JNOUJhVlNaYlh5RzVrbFBDaVM4RVhoYUIKSTRTTlNIenJLY2I1eitsT3YzcXpXQ24vMGhrZGNmMU1HdVdYVzNXWW1FSXNGVDlOVzBxM09IeWUrK2RoNDU4RQphV1hPeWYwL2NrQ3ZtdUUranVRWjlIUnNveThSWE9acW8xNzAzR1VydE9IdGhwMHVkbHVYRVN4TENzb1Vaazl4Ck4rRE5rc1MzR3RHUm9nMDk4YXY2OTlFZHAvS2VIQTVUaFJJMURjWHdkL01vVG9vUnZNYklCWHIyRi81Uy9neWEKNmx6QlRKRnVBNTBpbThRK0dHa2xtZnJYNEZYS2hyUzVoSEwvVC94Uk1TKy9laVl6TzBzV3N2K3ViRlVsM3V3dApQbURzQ2E4aFNDZzNjYmJTeTFUenowOHFKY0VlTUJuV2w4RGgvQVRCeXVPRzNjTlZlN0dFUlhiYUR3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOLzBlZ3dLVWxZTXpuN3o4dTFoMEtIUQp4KzE1TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCeHJ0cmo2ZmtqVGVGN0M5VWxXdGI3ZmE5d2J5ejhvbUxqCm8xVjJpeWkxU3MwQzRsZWFaeHpjeWVFVkN0YUNjZjZWNWd4Rlk3SU5oQytCdkt2bmE5UThvS0Q4TmpCdXo1SkMKY1oyRXVYNVQzVmRjKzNrVHpSZXFlZGthWTBFbTZEVFNqUGoxRGZBOXVQajI0djl1bXR0L1g4bHBUbGo4bi8vbgpSWmNyRDZva0FJL1RiRUxLK0lkbkxzcjVyTk1GV2JVWExwWHpGK3Awdi9aY0ozRXJjeGg0UkN3WGgrQVdnNlo3Ckd5WmlzR0xUbGtqaGU2K0ErTGJ5YjZqN0xKL1AzL1ZXTVZpQlMrbjhycjByNDJqR1EyKzhYaWpuRkVHcSsvNFkKZzNxZjN5L3cyd2gxZk5PeUF6YUY3YURrQTRidkRvRGhsM0tZOFQvSG5BMEM2ZU5OeE5zZQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdkFPYk05QmFWU1piWHlHNWtsUENpUzhFWGhhQkk0U05TSHpyS2NiNXorbE92M3F6CldDbi8waGtkY2YxTUd1V1hXM1dZbUVJc0ZUOU5XMHEzT0h5ZSsrZGg0NThFYVdYT3lmMC9ja0N2bXVFK2p1UVoKOUhSc295OFJYT1pxbzE3MDNHVXJ0T0h0aHAwdWRsdVhFU3hMQ3NvVVprOXhOK0ROa3NTM0d0R1JvZzA5OGF2Ngo5OUVkcC9LZUhBNVRoUkkxRGNYd2QvTW9Ub29Sdk1iSUJYcjJGLzVTL2d5YTZsekJUSkZ1QTUwaW04UStHR2tsCm1mclg0RlhLaHJTNWhITC9UL3hSTVMrL2VpWXpPMHNXc3YrdWJGVWwzdXd0UG1Ec0NhOGhTQ2czY2JiU3kxVHoKejA4cUpjRWVNQm5XbDhEaC9BVEJ5dU9HM2NOVmU3R0VSWGJhRHdJREFRQUJBb0lCQVFDRjNYTjEwdFZlWnk4TApidkczMDlkZzRZOFVocVZ2Nm9MRnA5dXdKVEhjN05yYXpydysrN2hmbU80MEtRczA0MTkvQ1IyYTJ4S1VGanczCjBkemVaU3kxWXF0NTY5Q3lVb0NIcEw2MTFJU3ptOGgwNk1mcUc3TDJCUjh4ckFVbFNRakNtMjRoSGZPR3N3ZFAKMGlxZldaQWNvSUVoejFKblhMSkIyN29iYURkdXp4SDdtVkNsWEswUllXR0txV3ZKblJ6U1RSQ3JvVThvaU5jNApJZmdzSDJVY2Q5VFArMGM4ZkFadVlvek9YSkFxNGxOZmVyTk9YMzBiQkNIb1I0SHhnTTgwaDlLNXU2aGdXK0s3CnZjQmlBRnB3bDBuUmlacDcyVm8wMDFHQnV3OUhXYTlyVmE3aGxpb1dlTmlub2wwWUluRzRJdVVJWm9pWUdjZk8KVjF3ZlNEMFJBb0dCQU0vZGkzalBjdDhCbXVTdjRKN3F2ZXhkQmFYSE04RzFpVkpOY0I5V3IxYzV0NlBRY2IyMwphbEI5eU1MNjJvUGh2bU9wQjFEczRGSlcvT3ptNXB4T29odXpXem9xQnpYUUlseUFGbzV6TENieENBejRYc01uCmVEdGRIN0g3Zll4dVpuVGdMUy9uVEQ2SlEwN1VUVEdLLzVHeDhPUGQ5eU9XZ094Rld6bGhBVHVkQW9HQkFPZU4KUWExUjVGT2VNdGN3MkVWYmtvb24zcGV4R1ZENHY4cXl4N1VKa0FBRkR3NjZXVm4xT3dwMEt0ZitvQVZQMC90UwpJUVhROVJ1eFdKNkhxeldUSEhtV2d3MGZTT3JGV0p0RjhHelJ3Y0JXQ2pwN282ZlZ1NmlZNlQ0NWZwdVlJOVlOCkdTamVWc0NTMUp1Q3dkclAvZWVidUlaeUJjTUZhVWF6OTFLaXNDcWJBb0dBTU5hV3ZHM1JTWUF4Q21ZZ1duWkEKNVZYOXk3Ti8vNVZOakY3Ulp5dVF5dWV1cy9oM29PR0ZReUFxbVZVakhqVmQ3RUI4alpENks1NXdrcUMxc2lmdgpncDZqWW9rWlpKVmdYV2RpNVZrK0dIQXRPZzdwQk9VekpJOStzT3lyMU9EamhiWmVKNUVxb3M3UlY2WWQ5UFA1CmxCdkF3MmtWZGZFWW5XcTJRa2IrYVNrQ2dZQllqOVJ3NEFOK1grRitJTFozUUtENXFtb2VocVB5TGxIY3l5aEsKKzg5UjBwMkJ1cEIyTWE5VlBqMHN3N3ljaTMyK2dCa1ZTbWlWSU8yT0pNRzlDZms0SC9NYno3MXAzZlVYM2xZbwpxTWw4TU94VWxmbHdOZlZDZE1tdy9QaUp0bFR1aDYvNXk2Qk9vMW9oNkk4UWk4REhGdTRxcmUyNk81V2FiemJICkttWkt4UUtCZ1FDeWo4czZ4NXdDam5UaDV6a0k3b1ExZmtFdDYwOW9wbWZpakkraFhpcUVOR0w3OXZtcEExM0UKMi90QnNXYUlUVFhXUXBiMUlYcjBmbk9QRFpqQk5IOWU4d21QRFpHN3dwem9IS2dJcVpFVktKV1VVVjJxOVJhZgo5Ym9qdGJ1M3hQeGREUUR1M3E3d3lCZnp0VFlLSWRBeWZ4dmptdERiNG5qZkhmek05WmMvaVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-kong-validation-webhook-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjVENDQWxtZ0F3SUJBZ0lSQU9XVkJnc2NGMXFpQ0RoSXZlOS9IT2t3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalV3T0RFd01ERXlOREF4V2hjTgpNelV3T0RBNE1ERXlOREF4V2pBek1URXdMd1lEVlFRREV5aHJiMjVuTFd0dmJtY3RkbUZzYVdSaGRHbHZiaTEzClpXSm9iMjlyTG1SbFptRjFiSFF1YzNaak1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTVzTCtxN205b3JPV0x4R0JRckxCWXM4VUdxTTFYc1hSazN2dWxLY3A0U2RnaUM1c2M5d0JPZ1dOS2tIYwpVcEt1QmJJV05hNGtLNFhnU2QzV3J6cUVwc0pFNWwxODRxckVydERpU0RYam0wLythZmdSMjNUdTU0c1hpbUVtCnRoNkNqOFpPS3dnU21OSUNBZ2Q4c1U1WFJPRGRCdXk0aUpoUng4NXhRU0k2Qm0wb3V0RnloRkpMYWxiTy9tU3kKeUUrai8za0tGQjZTZkhHbjQvS1N5VWcvbW14ayttMkd3N3k4QWR2M0Z2S0pydWxuOUJYMFFzUVZjVi8yNHhHcwpuK2hKSldSZk1MVGVOTGRuaDY4cW9BcTY1VFBHaG50R09IWnEzK3ZhWEtNVFZFQ1RzUmJaT1oyYjRQT1FldTJDClRaTFBDajhVM1d0YkdMd2ZEZFU0bG5vejJRSURBUUFCbzRHV01JR1RNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVgpIU01FR0RBV2dCVGY5SG9NQ2xKV0RNNSs4L0x0WWRDaDBNZnRlVEF6QmdOVkhSRUVMREFxZ2locmIyNW5MV3R2CmJtY3RkbUZzYVdSaGRHbHZiaTEzWldKb2IyOXJMbVJsWm1GMWJIUXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQkFRQ285bVI4ZkZJQThWem43bnNsL2RnRXZCclNUZ1REY0V4TmN0a3c2MGY2eGpiZ3cvWUgrUDJCVHFRMgpRSTdWNktlZ2FnVloyRDRWWU0xdGZNeTI2NmhpNk9SeHlqeWFmK2swYmdWZlQ1My9seUZDZ0xVaGlpSnV3c3Q3CjlZd1NDakNIa0t4Z29qUmxPOGc1RkRuQm0zNHM5dXVCdld3ZngwN1ZRdncyc2JOUFVwMUpEam5PcW1aWGdVc2wKekRVb2NTQURDYTE3S1U4cE5XcUxVZkwzNStJajJ3M1V1ck9jVXJHYmRmY3FDSE5uYVlFS2JXc2tUaWFZaDVoaQpFSU1NckxvZ2lZd3BwTW9IUTVwaUE5NHVKSmFXanNYbVQzdkI0VHBvTTVyTTZxbm1TeGxSbDhOa0pWbnFMSjRNCkJreWZreGJvMVIzVUZwcXRWT0QvOHcxRDRrbC8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNXNMK3E3bTlvck9XTHhHQlFyTEJZczhVR3FNMVhzWFJrM3Z1bEtjcDRTZGdpQzVzCmM5d0JPZ1dOS2tIY1VwS3VCYklXTmE0a0s0WGdTZDNXcnpxRXBzSkU1bDE4NHFyRXJ0RGlTRFhqbTAvK2FmZ1IKMjNUdTU0c1hpbUVtdGg2Q2o4Wk9Ld2dTbU5JQ0FnZDhzVTVYUk9EZEJ1eTRpSmhSeDg1eFFTSTZCbTBvdXRGeQpoRkpMYWxiTy9tU3l5RStqLzNrS0ZCNlNmSEduNC9LU3lVZy9tbXhrK20yR3c3eThBZHYzRnZLSnJ1bG45QlgwClFzUVZjVi8yNHhHc24raEpKV1JmTUxUZU5MZG5oNjhxb0FxNjVUUEdobnRHT0hacTMrdmFYS01UVkVDVHNSYloKT1oyYjRQT1FldTJDVFpMUENqOFUzV3RiR0x3ZkRkVTRsbm96MlFJREFRQUJBb0lCQVFDeCsreFpuMlY0dkhNMQowcGFVVHpPQmRwN1cvTk1KU2lLZlVwTnQ3SkVNckVaMFF2bzdVcEZQbzBDQ08xSW9EaUpUR2t5dkVxV3JQQk1HClppaFQ5eHFoVkcyNEVKdG1hTGhTN2FIYWVGWVpVTlcxL2pRbnhFVVFLZVA2UTN5TU0zUVlXS2VwNFF3VytzTzUKdFBTai9QeXFqNVZxNWVKZTJMMGJFMHVmSlRzRUFHN1FnV3cvMVVuOVJta2QrTzJFOGRzd2tEUk5FNlZiazFkNQpxRUwzTElEMnA4Q0tRaUdOcTRYT1lvVGl2V0lZNGsrQlk1NXV3UXlpb0xuSW1VK2NLSWpXMnhYekJoYTZXRVBPClNMUW16OFQ4UzBodnR3SGVjS2VqU1RLMC9xM0hBU1dNN1pudFp5anF5NUU2T0lQVkNQWktGaVRuNmEvZ0RiU2QKRHhsQU1hSkJBb0dCQU83eU5kYnY3LzYrczR6ZERENWM2K2xMajRRckFSbGZMRzMra1V3bnI0MkhHemhDVHN2Ugp0KzFsL3lGVVZ2cGhOSDV0TkZWeElpVEduSCtvUjgyb2dNQTJwTHlTY3NCUU00ZXMzNWIzMDBwcnc3T2hhbDhxCk5FTFk5RDJTNnJLWFFTU3pJZUVFbC85MitmbHBpejFoOFk0MGJZaytLYkViNVlkaEd0TFgvOVBkQW9HQkFQYzcKUHhzalFYTzhMN3c1SGpjMTdwT25SamdkRG8wSUtIYnl6L1phREVseWdYUVpIemVuaTRaMTVjWEFBTTROSDBqcwpWbkx5eHZtS3F3TWxEbXhDSXFjWmpkWkpIU01Zdy9yaTN2WGo5UzB5ZzJWdVM5MlJVSkhMWFRJekhZMXJPTWYwClcrTEhlMGNlTlNzdlpia1NZUjYwa3JDa3JDbEhxY2RKaHJwWVRXNHRBb0dBWGtqc3ZiZEh0L2wvMStHUlp6bzcKVEg4b1RqcTU0RTBSdHdWd1IrQ1JBUU9DMWh3MEEzRHBacCtNb0pZckMvazNRWHZOM3JrWmcvRnE1MlI3a01jZwpwcmZwSVErWWdCSWxneS9QdWo1bi9VR3dvenphUUZyaTdFMjNjbVI2ZjZYM2FvZlVvbm14a0hoZUF2Q0dwTjMwCjl1dnhIT3FPZ1BoRkJicG5Yek1rRzNFQ2dZRUF0dE5KUjNnNjNxczdZYVdiZ3BpUFpRRStIQ0Rnc2NwbW9nL04KV2hBZEpmTlhaOU5zRW13RDhkc2RuNjdzNlhNcXYzS0dPMXJ0YVh2eUd0RThhVEkvRGZNSHdIOHczTk5qbWhSTApiT3EyVkVZV2hOdWJucTNuTnVsOGNiTDdGNmxDeEJzZ0dBUU1WZnN3dGs3R21xWE16RGdjZ2lSRWJBSml1c3pVCnBOakg2Y0VDZ1lCdVVlbWlQK1RJMGZaTzhBZ20ySGF4MmF3UzV3RnBIMzdZa2ZIeDBSQ1hWeURpTjcwZFdBc08Kdm5Db1U2ejlMdmxOc25NWlVIV2wrSU9LK2YzSHl3azdNQXRpdy9PdFN4clRVdGIvbm8vN2NsYytnR1JsKy95dwpqTCtlQWMxdmdCU3VUYmdTd3FHbEVQZUE0Snh6MTk2ZFMrVE5xVWxRWXRqOG01ODMwZXZqQlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
  name: kong-kong
rules:

- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants/status
  verbs:
  - get
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-kong
subjects:
  - kind: ServiceAccount
    name: kong-kong
    namespace: default
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kong-kong
subjects:
  - kind: ServiceAccount
    name: kong-kong
    namespace: default
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-validation-webhook
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: app
---
# Source: kong/templates/controller-service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-metrics
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
spec:
  ports:
  - name: cmetrics
    port: 10255
    protocol: TCP
    targetPort: cmetrics
  - name: status
    port: 10254
    protocol: TCP
    targetPort: cstatus
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: app
---
# Source: kong/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-manager
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
spec:
  type: NodePort
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  - name: kong-manager-tls
    port: 8445
    targetPort: 8445
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: kong/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    enable-metrics: "true"
spec:
  type: NodePort
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    nodePort: 30080
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    nodePort: 30443
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: kong/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-kong
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: app
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "kong"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: kong-kong-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.11"
        app.kubernetes.io/component: app
        app: kong-kong
        
        version: "3.11"
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
      - name: wait-for-db
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        
      
        args: [ "/bin/bash", "-c", "export KONG_NGINX_DAEMON=on KONG_PREFIX=`mktemp -d` KONG_KEYRING_ENABLED=off; until kong start; do echo 'waiting for db'; sleep 1; done; kong stop"]
        volumeMounts:
          - name: kong-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-kong-tmp
            mountPath: /tmp
          
        resources:
          {}
      containers:
      - name: ingress-controller
        securityContext:
      
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        - name: cstatus
          containerPort: 10254
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONGHQ_COM_GLOBAL_PLUGINS
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_URL
          value: "https://localhost:8444"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "default/kong-kong-proxy"
        
        image: kong/kubernetes-ingress-controller:3.5
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: kong-kong-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
      
      - name: "proxy"
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: kong-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-kong-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kong-kong-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: kong-kong-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: kong-kong-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - name: webhook-cert
          secret:
            secretName: kong-kong-validation-webhook-keypair
---
# Source: kong/templates/migrations.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-kong-init-migrations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: init-migrations
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  backoffLimit: 
  template:
    metadata:
      name: kong-init-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.11"
        app.kubernetes.io/component: init-migrations
      annotations:
        sidecar.istio.io/inject: "false"
        kuma.io/service-account-token-volume: kong-kong-token
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      containers:
      - name: kong-migrations
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault 
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        args: [ "kong", "migrations", "bootstrap" ]
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
        
        resources:
          limits:
            cpu: "1"
            ephemeral-storage: 1Gi
            memory: 512Mi
          requests:
            cpu: 200m
            ephemeral-storage: 256Mi
            memory: 256Mi
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: kong-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: kong-kong-validation-webhook-keypair
---
# Source: kong/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: kong-kong-default-validations
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRUS9CRFl1emRLTllkU3MyZVJBaHhWREFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEE0TVRBd01USTBNREZhRncwegpOVEE0TURnd01USTBNREZhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZBT2JNOUJhVlNaYlh5RzVrbFBDaVM4RVhoYUIKSTRTTlNIenJLY2I1eitsT3YzcXpXQ24vMGhrZGNmMU1HdVdYVzNXWW1FSXNGVDlOVzBxM09IeWUrK2RoNDU4RQphV1hPeWYwL2NrQ3ZtdUUranVRWjlIUnNveThSWE9acW8xNzAzR1VydE9IdGhwMHVkbHVYRVN4TENzb1Vaazl4Ck4rRE5rc1MzR3RHUm9nMDk4YXY2OTlFZHAvS2VIQTVUaFJJMURjWHdkL01vVG9vUnZNYklCWHIyRi81Uy9neWEKNmx6QlRKRnVBNTBpbThRK0dHa2xtZnJYNEZYS2hyUzVoSEwvVC94Uk1TKy9laVl6TzBzV3N2K3ViRlVsM3V3dApQbURzQ2E4aFNDZzNjYmJTeTFUenowOHFKY0VlTUJuV2w4RGgvQVRCeXVPRzNjTlZlN0dFUlhiYUR3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOLzBlZ3dLVWxZTXpuN3o4dTFoMEtIUQp4KzE1TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCeHJ0cmo2ZmtqVGVGN0M5VWxXdGI3ZmE5d2J5ejhvbUxqCm8xVjJpeWkxU3MwQzRsZWFaeHpjeWVFVkN0YUNjZjZWNWd4Rlk3SU5oQytCdkt2bmE5UThvS0Q4TmpCdXo1SkMKY1oyRXVYNVQzVmRjKzNrVHpSZXFlZGthWTBFbTZEVFNqUGoxRGZBOXVQajI0djl1bXR0L1g4bHBUbGo4bi8vbgpSWmNyRDZva0FJL1RiRUxLK0lkbkxzcjVyTk1GV2JVWExwWHpGK3Awdi9aY0ozRXJjeGg0UkN3WGgrQVdnNlo3Ckd5WmlzR0xUbGtqaGU2K0ErTGJ5YjZqN0xKL1AzL1ZXTVZpQlMrbjhycjByNDJqR1EyKzhYaWpuRkVHcSsvNFkKZzNxZjN5L3cyd2gxZk5PeUF6YUY3YURrQTRidkRvRGhsM0tZOFQvSG5BMEM2ZU5OeE5zZQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kong-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: "konghq.com/credential"
      operator: "Exists"
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRUS9CRFl1emRLTllkU3MyZVJBaHhWREFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEE0TVRBd01USTBNREZhRncwegpOVEE0TURnd01USTBNREZhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZBT2JNOUJhVlNaYlh5RzVrbFBDaVM4RVhoYUIKSTRTTlNIenJLY2I1eitsT3YzcXpXQ24vMGhrZGNmMU1HdVdYVzNXWW1FSXNGVDlOVzBxM09IeWUrK2RoNDU4RQphV1hPeWYwL2NrQ3ZtdUUranVRWjlIUnNveThSWE9acW8xNzAzR1VydE9IdGhwMHVkbHVYRVN4TENzb1Vaazl4Ck4rRE5rc1MzR3RHUm9nMDk4YXY2OTlFZHAvS2VIQTVUaFJJMURjWHdkL01vVG9vUnZNYklCWHIyRi81Uy9neWEKNmx6QlRKRnVBNTBpbThRK0dHa2xtZnJYNEZYS2hyUzVoSEwvVC94Uk1TKy9laVl6TzBzV3N2K3ViRlVsM3V3dApQbURzQ2E4aFNDZzNjYmJTeTFUenowOHFKY0VlTUJuV2w4RGgvQVRCeXVPRzNjTlZlN0dFUlhiYUR3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOLzBlZ3dLVWxZTXpuN3o4dTFoMEtIUQp4KzE1TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCeHJ0cmo2ZmtqVGVGN0M5VWxXdGI3ZmE5d2J5ejhvbUxqCm8xVjJpeWkxU3MwQzRsZWFaeHpjeWVFVkN0YUNjZjZWNWd4Rlk3SU5oQytCdkt2bmE5UThvS0Q4TmpCdXo1SkMKY1oyRXVYNVQzVmRjKzNrVHpSZXFlZGthWTBFbTZEVFNqUGoxRGZBOXVQajI0djl1bXR0L1g4bHBUbGo4bi8vbgpSWmNyRDZva0FJL1RiRUxLK0lkbkxzcjVyTk1GV2JVWExwWHpGK3Awdi9aY0ozRXJjeGg0UkN3WGgrQVdnNlo3Ckd5WmlzR0xUbGtqaGU2K0ErTGJ5YjZqN0xKL1AzL1ZXTVZpQlMrbjhycjByNDJqR1EyKzhYaWpuRkVHcSsvNFkKZzNxZjN5L3cyd2gxZk5PeUF6YUY3YURrQTRidkRvRGhsM0tZOFQvSG5BMEM2ZU5OeE5zZQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kong-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- name: validations.kong.konghq.com
  matchPolicy: Equivalent
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
      - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - 'v1alpha2'
    - 'v1beta1'
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRUS9CRFl1emRLTllkU3MyZVJBaHhWREFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEE0TVRBd01USTBNREZhRncwegpOVEE0TURnd01USTBNREZhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZBT2JNOUJhVlNaYlh5RzVrbFBDaVM4RVhoYUIKSTRTTlNIenJLY2I1eitsT3YzcXpXQ24vMGhrZGNmMU1HdVdYVzNXWW1FSXNGVDlOVzBxM09IeWUrK2RoNDU4RQphV1hPeWYwL2NrQ3ZtdUUranVRWjlIUnNveThSWE9acW8xNzAzR1VydE9IdGhwMHVkbHVYRVN4TENzb1Vaazl4Ck4rRE5rc1MzR3RHUm9nMDk4YXY2OTlFZHAvS2VIQTVUaFJJMURjWHdkL01vVG9vUnZNYklCWHIyRi81Uy9neWEKNmx6QlRKRnVBNTBpbThRK0dHa2xtZnJYNEZYS2hyUzVoSEwvVC94Uk1TKy9laVl6TzBzV3N2K3ViRlVsM3V3dApQbURzQ2E4aFNDZzNjYmJTeTFUenowOHFKY0VlTUJuV2w4RGgvQVRCeXVPRzNjTlZlN0dFUlhiYUR3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOLzBlZ3dLVWxZTXpuN3o4dTFoMEtIUQp4KzE1TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCeHJ0cmo2ZmtqVGVGN0M5VWxXdGI3ZmE5d2J5ejhvbUxqCm8xVjJpeWkxU3MwQzRsZWFaeHpjeWVFVkN0YUNjZjZWNWd4Rlk3SU5oQytCdkt2bmE5UThvS0Q4TmpCdXo1SkMKY1oyRXVYNVQzVmRjKzNrVHpSZXFlZGthWTBFbTZEVFNqUGoxRGZBOXVQajI0djl1bXR0L1g4bHBUbGo4bi8vbgpSWmNyRDZva0FJL1RiRUxLK0lkbkxzcjVyTk1GV2JVWExwWHpGK3Awdi9aY0ozRXJjeGg0UkN3WGgrQVdnNlo3Ckd5WmlzR0xUbGtqaGU2K0ErTGJ5YjZqN0xKL1AzL1ZXTVZpQlMrbjhycjByNDJqR1EyKzhYaWpuRkVHcSsvNFkKZzNxZjN5L3cyd2gxZk5PeUF6YUY3YURrQTRidkRvRGhsM0tZOFQvSG5BMEM2ZU5OeE5zZQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kong-kong-validation-webhook
      namespace: default
---
# Source: kong/templates/migrations-post-upgrade.yaml
# Why is this Job duplicated and not using only helm hooks?
# See: https://github.com/helm/charts/pull/7362
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-kong-post-upgrade-migrations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: post-upgrade-migrations
  annotations:
    helm.sh/hook: "post-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
spec:
  backoffLimit: 
  template:
    metadata:
      name: kong-post-upgrade-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.11"
        app.kubernetes.io/component: post-upgrade-migrations
      annotations:
        sidecar.istio.io/inject: "false"
        kuma.io/service-account-token-volume: kong-kong-token
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      containers:
      - name: kong-post-upgrade-migrations
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault 
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        args: [ "kong", "migrations", "finish" ]
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
        
        resources:
          limits:
            cpu: "1"
            ephemeral-storage: 1Gi
            memory: 512Mi
          requests:
            cpu: 200m
            ephemeral-storage: 256Mi
            memory: 256Mi
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: kong-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: kong-kong-validation-webhook-keypair
---
# Source: kong/templates/migrations-pre-upgrade.yaml
# Why is this Job duplicated and not using only helm hooks?
# See: https://github.com/helm/charts/pull/7362
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-kong-pre-upgrade-migrations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: pre-upgrade-migrations
  annotations:
    helm.sh/hook: "pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  backoffLimit: 
  template:
    metadata:
      name: kong-pre-upgrade-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.11"
        app.kubernetes.io/component: pre-upgrade-migrations
      annotations:
        sidecar.istio.io/inject: "false"
        kuma.io/service-account-token-volume: kong-kong-token
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      containers:
      - name: kong-upgrade-migrations
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        args: [ "kong", "migrations", "up" ]
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
        
        resources:
          limits:
            cpu: "1"
            ephemeral-storage: 1Gi
            memory: 512Mi
          requests:
            cpu: 200m
            ephemeral-storage: 256Mi
            memory: 256Mi
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: kong-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: kong-kong-validation-webhook-keypair
