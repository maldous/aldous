---
# Source: kong/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
spec:
  minAvailable: 1
  unhealthyPodEvictionPolicy: IfHealthyBudget
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      helm.sh/chart: kong-2.51.0
      app.kubernetes.io/instance: "kong"
      app.kubernetes.io/managed-by: "Helm"
      
      app.kubernetes.io/version: "3.11"
      app.kubernetes.io/component: app
---
# Source: kong/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-kong-validation-webhook-ca-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUtvZHNzQjQwa2hrNk8ydnBYRGhiQXd3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalV3T0RBNU1URXpNVFV3V2hjTgpNelV3T0RBM01URXpNVFV3V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMV0RVbm10RjZhZDNUaW92WUlrS0lzazFIaUUKMlc4UE82ajl6OGJhOS9OOXJZay9CL3hINnhTTnpkbVJRRG9Zd3hzUWcvQWg4bFZZeHFLTDNKdVdGOFN1ZlJZSwoxbmFLL2ZqMDdEVGRlMk5La3NFdkVLVUVRWThrc0NpRmZnUXRXRFFucjVXV2tpb2U2MExjc3Rmb2E0U3VTckJYClo2Zjg2WmxqbjZIL2kzYVdZdk1VWkJwNkRjcngveVdObTFkN3prZ25lTGNHOWwzQkFEWVV2UzZBd3BVMXVoNWMKSXE0NVMvV2wyb0dDRkppVC9yL0FZNUZ2c0hvK0txd3VkYXBmNWhwcUdTTU5IRmdsVmtWZVcvbnpmV2NxOUwwMApEZzlBWm5sTUlYUHZGeWIzNWpBdFNkbE5iaTFqZmk0U0dLL3FWUnA3aktzaUpEbSt0NTlYb2c5cU9KVUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWRpdFNDQ0dVdW01dmtSdm5pOEpOVApHamEyNURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU1DYmJGY3U5NHFPSGEyYnVOWE9HRjlQQjRnSlNhMVhUCkk1SjQvQVZTU2lJS0xMdzNiLzI5ZkdnQjlnc3ZyUm1CaGxoaVJZcSs0VktESEFvWjBieVExSnRCOTRWR1REVUEKQmhVM29RT0x2YStSMldQaXZVNVFPV0VWYzdSdG9Ibll6VFkrWTMwM3NSTjlwVVdydWNFWk1SWlg0blZrT3VaNwp4OU02TE0xMW5RRUNpNXR4MDFKRVhhWDNrWkt3SVZ3OVlJN3QxU3d0QUlBSHlLZG5Fd016OEJNWkFsODRmSlpWCkRnbk1YTVZBdjdnT0UxZHdUaFJGVDNydkhoaEZkQ1ZCODRURDcxNlM4M1lsRHZGa0ZzRUhncmdQWHR5NlJrOXAKT3kvcmpZYTJTRnBPYTZsaWgwb0NpMjQyMjBEQktyaGZORUVFZ3AzNEhWeVNaMHE2aGNNTlpRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdFlOU2VhMFhwcDNkT0tpOWdpUW9peVRVZUlUWmJ3ODdxUDNQeHRyMzgzMnRpVDhICi9FZnJGSTNOMlpGQU9oakRHeENEOENIeVZWakdvb3ZjbTVZWHhLNTlGZ3JXZG9yOStQVHNOTjE3WTBxU3dTOFEKcFFSQmp5U3dLSVYrQkMxWU5DZXZsWmFTS2g3clF0eXkxK2hyaEs1S3NGZG5wL3pwbVdPZm9mK0xkcFppOHhSawpHbm9OeXZIL0pZMmJWM3ZPU0NkNHR3YjJYY0VBTmhTOUxvRENsVFc2SGx3aXJqbEw5YVhhZ1lJVW1KUCt2OEJqCmtXK3dlajRxckM1MXFsL21HbW9aSXcwY1dDVldSVjViK2ZOOVp5cjB2VFFPRDBCbWVVd2hjKzhYSnZmbU1DMUoKMlUxdUxXTitMaElZcitwVkdudU1xeUlrT2I2M24xZWlEMm80bFFJREFRQUJBb0lCQUVWSnFOMExwd0NTT0ZVZApqS0cySGNmbnVqZDdOdWovSHA0R3JSN1NqVjNrTnE4eVlXRDdMeEI4aFB5dFJxQW12YXVDSldzditpcDhKZTc4CmhxelpvWjhSb0d3ZW5QbEpXMk9DVXZ4bkkyZW1tdGlsbDZ2Mk1QUnNZOVpFQnZPZlA1RkJLUFJvTXNsalhoajYKMkVZMDBYNG5iaGxjZEJRYkppeklhN0pTTXpHRDExZ0RxVE1aaStLQ21nNUY1TDIwZmJSWHFvdjF1NzUycjhGMgo5a0hERXA1Y1lJcTBad1loRXpsTndReUo1Z0pnb2hJdGtEeG5hblRFa0FjNVM1NzJyd3l3azdjQVEyMTIzcmZXCkE4dCs5RkNSbkl5dTRXdFlCczIrMmhBN2N1V1dsK2c3NlBvdDBDdjR5WGgzKzR5QUxRbXUxWThnWWZjWFJMRGMKWU5hbWxpRUNnWUVBeEJaNzVMYTBlc2o0Z1p2dHJjVGJGci9jYmp5TzF5b3ArNCsvbFZBdVhEZ0pwSEdBY0VQTgpUSXF3dGMweEVMVnZpYVNMOHlJc2NDajZmWlVLQUVzQ0VibzY1VTgyMjZuck1WK0xEV3pnMlYvby9adGNEbTVPClgwMXExcHlUelQvSU1EeStQN3dVd09RVWVpd0hvTVFvMG9KUDVCY1dXRzhWSldPL3NKVDVUTDBDZ1lFQTdQalUKSDVTSTZiWXhwTDNkYXhDTm9NdlpEbVFvaUVXNmk0ZW9LS1lqbkVtakt1WFEzT2g0c1gxRHhUekJEN2Erc2d2RQpWUDFzZGd5Y1ZsamJEdmZEbTNkSXdBNGY0cDhKeW9oajUwdGhGdFBXWDdzNDcyTDFsbTBVQ2pxY29yUjhvejhtClgxMWRQd2NNMVlSRERwWlg4TWtHUG5qb25TcEJ6M2RLMmNIL0ZMa0NnWUFHelFUVkJPVXprUDdWZC9RQlg5OTkKWllBZXJxa0JtMnZEVnRQOU9MK3k0UnFzZ21kQy9ZY0VUWmNkWnhWNWorRmpjN3FLM3plTldFNS94b2lIUkJLNQpUSzA0UU13VlNFcG85dmhhcWRrT2tQNEN0YjIybm1ySGNXYndOSlFIdlZ1VEdMZzhlNmg0bkRCOW9FTlBkeDQzClZ0K3dlSUNFNXExa0U1YVZhRVZSUFFLQmdRRHJybDVxT2pRaEhROHFwWnE5ak8wTzZ5NnBYWHZpYkZjbnhuZTgKVmVBODVBL2Y3a2xZSyswOXVUUFp5cDdJbmh2eXdEazN2Z1JOTkNXWXl5NnpLRC9uTXkrcnMyQ0s1MW01a1FTcgpXUkRxdnkwS2NRNGpKK3pRK3hOZlNRUFgzbUhIaWxzRHBidkRuNk5vQis4Wlp2VjNpTGNwRXQ5bTBFdzdwbzFQCkhkNHdJUUtCZ0VVeWFpbE5vS0I5V0hkWjRTTDhoaHpaRGFTNk1Wc0xUZ0g2V1llcXlCOFdpYmtlSWFIWGRxZGQKOCtNNmpIaUcrV2FTclBSUllQZFFMNnd3WEVsNzBLdm9yNFhlcFpMelRBQk5iVTczSmVKZkNacXB4YlRicms3Kwo2aUpYZFVuUjZLdUJ5M2NWUjVSRmpxYThwM0RRMExMSEt6NThGRGUvN1ZFcFp0bW04OCtECi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-kong-validation-webhook-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjVENDQWxtZ0F3SUJBZ0lSQUtTb2JhbUlzd01pTzV0SnI5Tnd0WHd3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalV3T0RBNU1URXpNVFV3V2hjTgpNelV3T0RBM01URXpNVFV3V2pBek1URXdMd1lEVlFRREV5aHJiMjVuTFd0dmJtY3RkbUZzYVdSaGRHbHZiaTEzClpXSm9iMjlyTG1SbFptRjFiSFF1YzNaak1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXhidWFSYjdpbGFNUHFUNFY3Z1RnQitmR1lJc240OUhvMGkwSFJEbDNyZHdSSGI0eFlVMmpTemVNYWkyTApjbWR1TXgrQmVLYldoN0hnWjlZTEp1VnNQZGc0UHovS1VEMUdpWWZZM0RWSlNmVXpuV3FxUWtsNEtybU9EY3p0CmE3TlJ4c0NFMGFVYTRRcld2a2xLdTNaMmVybHVDenFzMTAxN09jdVRSc0xkWDk0dHUrK0hrNSsvb2ZBRjM2eU8KdkRQOTExQnV6RXAvbGlhWkNDR0F2RWZZdi82RGVKR2tYQnZ0a2hHSDJIcjh4MkFMakdWLzh5NEszc1JhRXczOAo4VTNDS3RhaURieGQ1UDBHdi9DVlg0Z1dzVnZ5MGVkblAxMHNSdGltSStXWjFwZmJPdU5mWU9xWGE3b0VocXdyCnRJbkpENjBjOU9lMTI4Z24yY1M0ZGYyQ29RSURBUUFCbzRHV01JR1RNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVgpIU01FR0RBV2dCUWRpdFNDQ0dVdW01dmtSdm5pOEpOVEdqYTI1REF6QmdOVkhSRUVMREFxZ2locmIyNW5MV3R2CmJtY3RkbUZzYVdSaGRHbHZiaTEzWldKb2IyOXJMbVJsWm1GMWJIUXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQkFRQmo0TzgreU4vTENreTB5azZEakxGaU1hQ1YrOXdmcnZJczdlU2ZlVHRzYklBV3J2b25BekRRdG1oWAppaGpwUllkdzRJLzdXNVZlWEZsUWF1OW1CR25taWxYS01iREJDbGZjUVF0T2dpSlV1aDJMd0pBajkyaVNybVJoCnRZSnc0d3A2b09kZXN5OXpNQTEzbWVWN1hQcEY3MDkxQXg4VnRxNWFPaDJKLzZrYWRtTzJkdGNoNndUa0tHc0gKNEpYOEZqcDlPTlhHc3ptOXorZU5qaEs2ZTJhQk9UakViREFSeDFTQy8xK1Fpc3NnRG1OWlRhUU5sK2FhK0grRgpiTEhzWVNmVnU1elJUS29Ec0dhUGtwMS9Sa1M5aTlRbWhXSFB3bU1CR2Jtcmc4MXY0VmkzOUlQRkd3QWpVaCtzCjBtbHZvNEF1bGFXL3ZkajhCMGRTam1XVmlNNzQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeGJ1YVJiN2lsYU1QcVQ0VjdnVGdCK2ZHWUlzbjQ5SG8waTBIUkRsM3Jkd1JIYjR4CllVMmpTemVNYWkyTGNtZHVNeCtCZUtiV2g3SGdaOVlMSnVWc1BkZzRQei9LVUQxR2lZZlkzRFZKU2ZVem5XcXEKUWtsNEtybU9EY3p0YTdOUnhzQ0UwYVVhNFFyV3ZrbEt1M1oyZXJsdUN6cXMxMDE3T2N1VFJzTGRYOTR0dSsrSAprNSsvb2ZBRjM2eU92RFA5MTFCdXpFcC9saWFaQ0NHQXZFZll2LzZEZUpHa1hCdnRraEdIMkhyOHgyQUxqR1YvCjh5NEszc1JhRXczODhVM0NLdGFpRGJ4ZDVQMEd2L0NWWDRnV3NWdnkwZWRuUDEwc1J0aW1JK1daMXBmYk91TmYKWU9xWGE3b0VocXdydEluSkQ2MGM5T2UxMjhnbjJjUzRkZjJDb1FJREFRQUJBb0lCQVFDbkxiQ0gyNVpUa2VSQgo0WDVGR2RZWW1QdiswR2pQazhCWFF6N3JqZk1FQ2habW9WRzZ4UnVWRXNnalZaS2JEWnY4bVZ5c0Y5TTJNMHhhClBueDdUR294OThmR29qWjVsUFU0ZnFUNXVndlcvZnUvMGxsVlppeTFZdUVhQmZPT3BiUTBhTDFqUzBib2tuTngKdXlIMlVYaG0xclNWeGV3d3RRL0VrN3hYalpZQjRLaVh3cE5UVVZqaXowZGFicDMrUW9ubVNkcXBKZnFHR0pTUgpYcG9hWGxTbzl1enRpbENmS1lCTkhTT0RiU3pRNTV5VmkwM2JPcEFoR2JWR0xQNXdJQzcyUUJWbkhrVW0veVBPCnQ3dlBKVnBraWoxMGZ3Z3pzOE9RUzI5TWIvQU5MeW1IeFpuN24vSWdwcWg0QmMvMkZ1RU90SW9xWHhUTVNnV1MKRElpY3pUckpBb0dCQU80TzQ2MGlXNUtiT0lWQVk2bDlZWlQ4alJXYjBheUMzSmlld2tJT0xvZEI3VThnTlhBZApuMGFISkg1MEN1QXZpdVkxdDVzY1FGb09JTnNGTVllU2t6WDRXdHFZM2VsS0xJWmdzNHBYekpreTUyVVNpY0k0CnZXZEM5NnhKUWdzd0VWTzJ2YWdQNXE5Q0F0UldiOTdpMjN3ZlNlYVBkbmJiaTRleXlTSVk3enRIQW9HQkFOU2kKckdNK2huUjRoeGVieXNZZXpWaGdIQlBtMExnSnhEeTl2UzdwYTBZMFJIOVR5aTRvUHNPWjhIR0VoRXFMVm40ZgpWeFc4ZllSN1pnS2Q1WFNpaDgzOFNPd3dwbWN6V2JsZHhYanJnZVhyQmxyZ2MrYXNsbkM4SkhmbWZRWDIwVHV2CnpWV3BCMUZTc1RrZTNOYnNkdDlhSUFnNlc5Y2lkODlPQTA4aVFIYlhBb0dBZFhDYyswMm0xVldEOWFERlNka1QKNmRjSmx1NXU2dWNJQXJiWGFKVHNlVWVaMWQ0eTNxT09idEcrdkM5dEtobnFNUld4QlhGVGdkblVkWmhEVGZtTwpiQ0tnVjVUd2JPVnR2OEUyOFhuTThvcjlRb3g1cjNva1hpdllXWU11ZEt4Njc4eUlGYi82Y3QxaTNmUGlicGVGCjVkN2RxME45RXJmT1J0eDVnenUvMFlNQ2dZQkF6eUFwMDVuWmtBN2sxRGcyc0phMzgvczYyYVFPSS9QcTY0M28KNlg0bjFMQjMrb3JxREp3c3RCUEVGYmJZbmFXTUpYTStqY2ZZQkdCd05iNEZFYkRBeUw5Vk5mTFNDNld5U1BGeQpUSjIzL1MxZnIzL0Q5Q0NhVmMzcnVaV3JwckhaTmxrb1hhOThTdTczVVAvUWhod3BNV2dIK2ZtYUZjaGNxQk44CklCMXoyd0tCZ1FEUzNQZDZiUlVZNk5oVlVlQUdjYTBWVzVJbGdCNGlIVkxBWUFPY3kza3hvVTlTSGx6ZWhBNGEKamVycU1ieXZGZlQ4dC9IRXBXM0JBZXlsUS9RcEVlc0wrSW9vSnZjT0hvVEJGL25id2hHeWhBSVZsdXhYTTdzZQp6UXpwRmc5dFBtM0ZqSnJKa3dvZHVXcmc0U0VqQ3UzdGIzNy9BTzZBRjM0ZDVqcG5ad3VDVGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
  name: kong-kong
rules:

- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants/status
  verbs:
  - get
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-kong
subjects:
  - kind: ServiceAccount
    name: kong-kong
    namespace: default
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kong-kong
subjects:
  - kind: ServiceAccount
    name: kong-kong
    namespace: default
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-validation-webhook
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: app
---
# Source: kong/templates/controller-service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-metrics
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
spec:
  ports:
  - name: cmetrics
    port: 10255
    protocol: TCP
    targetPort: cmetrics
  - name: status
    port: 10254
    protocol: TCP
    targetPort: cstatus
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: app
---
# Source: kong/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-manager
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
spec:
  type: NodePort
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  - name: kong-manager-tls
    port: 8445
    targetPort: 8445
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: kong/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    enable-metrics: "true"
spec:
  type: NodePort
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    nodePort: 30080
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    nodePort: 30443
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: kong/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-kong
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: app
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "kong"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: kong-kong-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.11"
        app.kubernetes.io/component: app
        app: kong-kong
        
        version: "3.11"
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
      - name: wait-for-db
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        
      
        args: [ "/bin/bash", "-c", "export KONG_NGINX_DAEMON=on KONG_PREFIX=`mktemp -d` KONG_KEYRING_ENABLED=off; until kong start; do echo 'waiting for db'; sleep 1; done; kong stop"]
        volumeMounts:
          - name: kong-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-kong-tmp
            mountPath: /tmp
          
        resources:
          {}
      containers:
      - name: ingress-controller
        securityContext:
      
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        - name: cstatus
          containerPort: 10254
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONGHQ_COM_GLOBAL_PLUGINS
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_URL
          value: "https://localhost:8444"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "default/kong-kong-proxy"
        
        image: kong/kubernetes-ingress-controller:3.5
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: kong-kong-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
      
      - name: "proxy"
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: kong-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-kong-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kong-kong-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: kong-kong-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: kong-kong-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - name: webhook-cert
          secret:
            secretName: kong-kong-validation-webhook-keypair
---
# Source: kong/templates/migrations.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-kong-init-migrations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: init-migrations
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  backoffLimit: 
  template:
    metadata:
      name: kong-init-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.11"
        app.kubernetes.io/component: init-migrations
      annotations:
        sidecar.istio.io/inject: "false"
        kuma.io/service-account-token-volume: kong-kong-token
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      containers:
      - name: kong-migrations
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault 
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        args: [ "kong", "migrations", "bootstrap" ]
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
        
        resources:
          limits:
            cpu: "1"
            ephemeral-storage: 1Gi
            memory: 512Mi
          requests:
            cpu: 200m
            ephemeral-storage: 256Mi
            memory: 256Mi
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: kong-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: kong-kong-validation-webhook-keypair
---
# Source: kong/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: kong-kong-default-validations
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUtvZHNzQjQwa2hrNk8ydnBYRGhiQXd3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalV3T0RBNU1URXpNVFV3V2hjTgpNelV3T0RBM01URXpNVFV3V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMV0RVbm10RjZhZDNUaW92WUlrS0lzazFIaUUKMlc4UE82ajl6OGJhOS9OOXJZay9CL3hINnhTTnpkbVJRRG9Zd3hzUWcvQWg4bFZZeHFLTDNKdVdGOFN1ZlJZSwoxbmFLL2ZqMDdEVGRlMk5La3NFdkVLVUVRWThrc0NpRmZnUXRXRFFucjVXV2tpb2U2MExjc3Rmb2E0U3VTckJYClo2Zjg2WmxqbjZIL2kzYVdZdk1VWkJwNkRjcngveVdObTFkN3prZ25lTGNHOWwzQkFEWVV2UzZBd3BVMXVoNWMKSXE0NVMvV2wyb0dDRkppVC9yL0FZNUZ2c0hvK0txd3VkYXBmNWhwcUdTTU5IRmdsVmtWZVcvbnpmV2NxOUwwMApEZzlBWm5sTUlYUHZGeWIzNWpBdFNkbE5iaTFqZmk0U0dLL3FWUnA3aktzaUpEbSt0NTlYb2c5cU9KVUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWRpdFNDQ0dVdW01dmtSdm5pOEpOVApHamEyNURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU1DYmJGY3U5NHFPSGEyYnVOWE9HRjlQQjRnSlNhMVhUCkk1SjQvQVZTU2lJS0xMdzNiLzI5ZkdnQjlnc3ZyUm1CaGxoaVJZcSs0VktESEFvWjBieVExSnRCOTRWR1REVUEKQmhVM29RT0x2YStSMldQaXZVNVFPV0VWYzdSdG9Ibll6VFkrWTMwM3NSTjlwVVdydWNFWk1SWlg0blZrT3VaNwp4OU02TE0xMW5RRUNpNXR4MDFKRVhhWDNrWkt3SVZ3OVlJN3QxU3d0QUlBSHlLZG5Fd016OEJNWkFsODRmSlpWCkRnbk1YTVZBdjdnT0UxZHdUaFJGVDNydkhoaEZkQ1ZCODRURDcxNlM4M1lsRHZGa0ZzRUhncmdQWHR5NlJrOXAKT3kvcmpZYTJTRnBPYTZsaWgwb0NpMjQyMjBEQktyaGZORUVFZ3AzNEhWeVNaMHE2aGNNTlpRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kong-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: "konghq.com/credential"
      operator: "Exists"
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUtvZHNzQjQwa2hrNk8ydnBYRGhiQXd3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalV3T0RBNU1URXpNVFV3V2hjTgpNelV3T0RBM01URXpNVFV3V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMV0RVbm10RjZhZDNUaW92WUlrS0lzazFIaUUKMlc4UE82ajl6OGJhOS9OOXJZay9CL3hINnhTTnpkbVJRRG9Zd3hzUWcvQWg4bFZZeHFLTDNKdVdGOFN1ZlJZSwoxbmFLL2ZqMDdEVGRlMk5La3NFdkVLVUVRWThrc0NpRmZnUXRXRFFucjVXV2tpb2U2MExjc3Rmb2E0U3VTckJYClo2Zjg2WmxqbjZIL2kzYVdZdk1VWkJwNkRjcngveVdObTFkN3prZ25lTGNHOWwzQkFEWVV2UzZBd3BVMXVoNWMKSXE0NVMvV2wyb0dDRkppVC9yL0FZNUZ2c0hvK0txd3VkYXBmNWhwcUdTTU5IRmdsVmtWZVcvbnpmV2NxOUwwMApEZzlBWm5sTUlYUHZGeWIzNWpBdFNkbE5iaTFqZmk0U0dLL3FWUnA3aktzaUpEbSt0NTlYb2c5cU9KVUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWRpdFNDQ0dVdW01dmtSdm5pOEpOVApHamEyNURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU1DYmJGY3U5NHFPSGEyYnVOWE9HRjlQQjRnSlNhMVhUCkk1SjQvQVZTU2lJS0xMdzNiLzI5ZkdnQjlnc3ZyUm1CaGxoaVJZcSs0VktESEFvWjBieVExSnRCOTRWR1REVUEKQmhVM29RT0x2YStSMldQaXZVNVFPV0VWYzdSdG9Ibll6VFkrWTMwM3NSTjlwVVdydWNFWk1SWlg0blZrT3VaNwp4OU02TE0xMW5RRUNpNXR4MDFKRVhhWDNrWkt3SVZ3OVlJN3QxU3d0QUlBSHlLZG5Fd016OEJNWkFsODRmSlpWCkRnbk1YTVZBdjdnT0UxZHdUaFJGVDNydkhoaEZkQ1ZCODRURDcxNlM4M1lsRHZGa0ZzRUhncmdQWHR5NlJrOXAKT3kvcmpZYTJTRnBPYTZsaWgwb0NpMjQyMjBEQktyaGZORUVFZ3AzNEhWeVNaMHE2aGNNTlpRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kong-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- name: validations.kong.konghq.com
  matchPolicy: Equivalent
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
      - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - 'v1alpha2'
    - 'v1beta1'
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUtvZHNzQjQwa2hrNk8ydnBYRGhiQXd3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalV3T0RBNU1URXpNVFV3V2hjTgpNelV3T0RBM01URXpNVFV3V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMV0RVbm10RjZhZDNUaW92WUlrS0lzazFIaUUKMlc4UE82ajl6OGJhOS9OOXJZay9CL3hINnhTTnpkbVJRRG9Zd3hzUWcvQWg4bFZZeHFLTDNKdVdGOFN1ZlJZSwoxbmFLL2ZqMDdEVGRlMk5La3NFdkVLVUVRWThrc0NpRmZnUXRXRFFucjVXV2tpb2U2MExjc3Rmb2E0U3VTckJYClo2Zjg2WmxqbjZIL2kzYVdZdk1VWkJwNkRjcngveVdObTFkN3prZ25lTGNHOWwzQkFEWVV2UzZBd3BVMXVoNWMKSXE0NVMvV2wyb0dDRkppVC9yL0FZNUZ2c0hvK0txd3VkYXBmNWhwcUdTTU5IRmdsVmtWZVcvbnpmV2NxOUwwMApEZzlBWm5sTUlYUHZGeWIzNWpBdFNkbE5iaTFqZmk0U0dLL3FWUnA3aktzaUpEbSt0NTlYb2c5cU9KVUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWRpdFNDQ0dVdW01dmtSdm5pOEpOVApHamEyNURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU1DYmJGY3U5NHFPSGEyYnVOWE9HRjlQQjRnSlNhMVhUCkk1SjQvQVZTU2lJS0xMdzNiLzI5ZkdnQjlnc3ZyUm1CaGxoaVJZcSs0VktESEFvWjBieVExSnRCOTRWR1REVUEKQmhVM29RT0x2YStSMldQaXZVNVFPV0VWYzdSdG9Ibll6VFkrWTMwM3NSTjlwVVdydWNFWk1SWlg0blZrT3VaNwp4OU02TE0xMW5RRUNpNXR4MDFKRVhhWDNrWkt3SVZ3OVlJN3QxU3d0QUlBSHlLZG5Fd016OEJNWkFsODRmSlpWCkRnbk1YTVZBdjdnT0UxZHdUaFJGVDNydkhoaEZkQ1ZCODRURDcxNlM4M1lsRHZGa0ZzRUhncmdQWHR5NlJrOXAKT3kvcmpZYTJTRnBPYTZsaWgwb0NpMjQyMjBEQktyaGZORUVFZ3AzNEhWeVNaMHE2aGNNTlpRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kong-kong-validation-webhook
      namespace: default
---
# Source: kong/templates/migrations-post-upgrade.yaml
# Why is this Job duplicated and not using only helm hooks?
# See: https://github.com/helm/charts/pull/7362
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-kong-post-upgrade-migrations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: post-upgrade-migrations
  annotations:
    helm.sh/hook: "post-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
spec:
  backoffLimit: 
  template:
    metadata:
      name: kong-post-upgrade-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.11"
        app.kubernetes.io/component: post-upgrade-migrations
      annotations:
        sidecar.istio.io/inject: "false"
        kuma.io/service-account-token-volume: kong-kong-token
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      containers:
      - name: kong-post-upgrade-migrations
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault 
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        args: [ "kong", "migrations", "finish" ]
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
        
        resources:
          limits:
            cpu: "1"
            ephemeral-storage: 1Gi
            memory: 512Mi
          requests:
            cpu: 200m
            ephemeral-storage: 256Mi
            memory: 256Mi
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: kong-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: kong-kong-validation-webhook-keypair
---
# Source: kong/templates/migrations-pre-upgrade.yaml
# Why is this Job duplicated and not using only helm hooks?
# See: https://github.com/helm/charts/pull/7362
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-kong-pre-upgrade-migrations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: pre-upgrade-migrations
  annotations:
    helm.sh/hook: "pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  backoffLimit: 
  template:
    metadata:
      name: kong-pre-upgrade-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.11"
        app.kubernetes.io/component: pre-upgrade-migrations
      annotations:
        sidecar.istio.io/inject: "false"
        kuma.io/service-account-token-volume: kong-kong-token
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      containers:
      - name: kong-upgrade-migrations
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        args: [ "kong", "migrations", "up" ]
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
        
        resources:
          limits:
            cpu: "1"
            ephemeral-storage: 1Gi
            memory: 512Mi
          requests:
            cpu: 200m
            ephemeral-storage: 256Mi
            memory: 256Mi
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: kong-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: kong-kong-validation-webhook-keypair
