---
# Source: kong/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
spec:
  minAvailable: 1
  unhealthyPodEvictionPolicy: IfHealthyBudget
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      helm.sh/chart: kong-2.51.0
      app.kubernetes.io/instance: "kong"
      app.kubernetes.io/managed-by: "Helm"
      
      app.kubernetes.io/version: "3.11"
      app.kubernetes.io/component: app
---
# Source: kong/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-kong-validation-webhook-ca-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRQU1oR3JqK2d5VVNwOG1ZT3k2TVgxakFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEE0TURreE1EUTNOVEJhRncwegpOVEE0TURjeE1EUTNOVEJhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRiWWVFZm9UV3I1d0lxRUh4YWRBM0hZUFNaNkIKckp1NVFxL1FBZWtlSU1vd2dVM0VRR2dqVm5PTnFvcTBiU2U5Mm9ZaG1SN1VpeUllaXYya1ErUFEyWk5FRXFhTQpoMkEvRDNLWEJhNUFTRnZJeGdmbDNwYmxjUFgxUTRIMDdSSHVrQ1ZTRmxiQmd5V2tjMnE0eWhQQlY2bVFySUplCjBDaDhXNEI4VitiUlRvRi9hbTNMNEdkRnRIUXhMRHdwb2pJdWk3MzVtcUFnMVRpMTVzZlNKWVRkYzdnQkVHd1oKSnFINEdEWGQ2Z2JkYXlSRklMWXFuOE4ydTBYam9ITFlWaFNuMDhHSU05SnFHSVh4RTE3cDlqYm4rUlJWblN0RgpZTWY2emtPd281S2ZIM1ZtZ2hPT1RiSEllT3JYZ3pkT2hwYmhkY1hhYnhaT3V1WDVyV0w2bEl4YVR3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZGR3AwRVZ6dGJKSWhSdFJ6VDdEeDg4WAp3ekxHTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCYVpHZEY3K0dQUzM5NkR2dDNFajdUcmZ6RjNieFZsVjFHClkyNVJ5YUR6ZW92d1FVSVpuTW5hamNiTHpLMEwzcytSWkE5SXFLNHVIOThBdkNsVXJjQkRyR29XK0ZGQVVSd0sKT0pFTk56Zm8wVFVsU0RiNCtGWi9XcU94cU5GbG9ZTmVVdWpqYXVwRjVYQ1labVJRc2dUSXJ4Vy9JZkVLZFVkYQpycHZYUFZUTEwxY01BVHpscENnNnAxTnUzcG5xd05YRHRhdkJOaDI2VWNBQUlTZjRLTWxBd0lLQXhkZmhPaXoyCmRZVXZQZW9sTmRNRStRaUN3ckM5dDVtbkhOaGkyeFVlQXlsTlVPZ041OE0xSTFWNnhxMExWZytDbHVmdllnV1cKNVVHZnpMMGNjUk91dGVoZVpSQ2k5ODhzTlVBVU94N040OHZXb3V6OFVyZTJFRzRmZDUxYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdGJZZUVmb1RXcjV3SXFFSHhhZEEzSFlQU1o2QnJKdTVRcS9RQWVrZUlNb3dnVTNFClFHZ2pWbk9OcW9xMGJTZTkyb1lobVI3VWl5SWVpdjJrUStQUTJaTkVFcWFNaDJBL0QzS1hCYTVBU0Z2SXhnZmwKM3BibGNQWDFRNEgwN1JIdWtDVlNGbGJCZ3lXa2MycTR5aFBCVjZtUXJJSmUwQ2g4VzRCOFYrYlJUb0YvYW0zTAo0R2RGdEhReExEd3Bvakl1aTczNW1xQWcxVGkxNXNmU0pZVGRjN2dCRUd3WkpxSDRHRFhkNmdiZGF5UkZJTFlxCm44TjJ1MFhqb0hMWVZoU24wOEdJTTlKcUdJWHhFMTdwOWpibitSUlZuU3RGWU1mNnprT3dvNUtmSDNWbWdoT08KVGJISWVPclhnemRPaHBiaGRjWGFieFpPdXVYNXJXTDZsSXhhVHdJREFRQUJBb0lCQUF1RjdRbyt6Wk5ubUR6Wgo4V0E3WndXVUJ3d29IUmtSRndKL203VkRUMEhORUo1aWpCdDVmeVF3VjcrRTVFUTN6UFphb3k3T29iUGhDZ2JPClp1aFhQaHRPRjNjSFVNb1U5R3JLWFlGaXQzamZPVEExdUFJUmw2TStOYnQrTmtZQ2FScURBMTJmU3M1Q1NOZDQKNFJjUGdhZEpmWDh6RlVnbUNSelVYUTVGK09mOWV0dU03eWhZQkh2amg3ZWtMQU5zVUJEN1ZkNVVreUFpbE1teAp6OVNyRis3c1R0Vy9ucnBVbnV6c2xFMmI3RHZ1a2c2QjI0dUtmMDUvNTVPR2xqSVp6KzNnRmNEaWE1VCt5OVBuCjhIdVZva29GMDRpS0R0YStlQklMdDgvQ1hGT21udzlLQTMwYU1PZXRndkZvd01mRU1BTlMxeXBJYXZ0d09rVFoKTC9zK2FhRUNnWUVBeFF3YUphNUtOak9MMUwwVC9UeHREVGJsZ0ZUS2hXakNmSnpxRXhNVzY2WVY2R1FYYzMyNgpYUDBWUnlwbjBvOTNrZVZUYTZIUjk5NWtELzhGalQyQXdsaE5DRG5xejJYSmFYb3dqV1JTVkI2cmVoOG5vQTVXCjdDVk5mcGxMeDFldFVYbXh2cWhTWUU5K2V2b1MrbEsvQmlpanltancrQWQwdS9PSk02VFgvZjBDZ1lFQTdCTnYKMFR4RUw0cEZCenZxR3E2dWZtTXNVVUUvdGp5T2owTU5zdGlZQ2xGditJUUVpbS9JUEtTazB6blJNVTNUd1BhbAo0bUxXZHF1bkRzeW9rVVpuNmUvQUtpd29ZRmJ1dmlGekZLY3kwSHlIRVU1YzRLY2VsdUhrR0RPSlhQUXlXeUx0CkdPRGxVZDhjWHBMRkZsT1Jad2owRktMZ1JYWmkyR1NpQ3FyUVpUc0NnWUVBdENRT08yaU5PK1AvNytzenZRMWkKL1BPMCtJK0wzazhaam1hOXI5YUIyOGtvdWgzWE9xUTBuaEpaUTRoSEJqNVdwN0NwaFBxWlJDdXgrdFhBTTVHSQpoeVBHdU1DS0pEVC8zMGZ2M3pOWitNRlpMdm9RZGNqbU9sa1g4YWNmbWd4VHpPcWVUcGovUmtFbWRqTHM2cUIvCk5wZ3N0VDBmSHdGaC9QbjE4cHEvUTlrQ2dZQm1mRTJudFJVWTJscjdOL3g2bHVqenYxUUc5bCtWV3BhOUJPd1cKZjBjSis2NnpZWVNqSU1INTZiUVFhdUl4R0V0Y1V2ZFMzM3VoU3dXY1BDYlY0bzNNRmlRRGF1WWdaTDBDVjMwaApNekN4Sjg1dktlalNNbHJxUDZpSkJSNlY5d0ZCWlZrdTJydFRIcHV2UnVJK3ZncTZnejJMRStadTRXVXA4ZzRTCnVYTDg3d0tCZ0dvR2Q0RTV2bzN2eEhGV09jUjhyQ0d2QzNyRFZmazE5aXdwOU9KS3o1ZUd6Uml6RjNwdkR5U0YKR0tEWHlFTjhRYjFEc2NKK2J2ME1jWWxmRnF2K1dXdWlTVWdLd0J6dzc5ckhtbnhHMWp5SmZlOVBzU3pTT1RQNApnbVFvN1ZXelMwQjV3RlFqbkpLRUdzMUFQZTlhZ08vUldMdjdRZXZYbWVpZWxLTFpCRld4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-kong-validation-webhook-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjVENDQWxtZ0F3SUJBZ0lSQUtPdmNHa2NvV2NWcEIrTFhja1VOU0F3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalV3T0RBNU1UQTBOelV3V2hjTgpNelV3T0RBM01UQTBOelV3V2pBek1URXdMd1lEVlFRREV5aHJiMjVuTFd0dmJtY3RkbUZzYVdSaGRHbHZiaTEzClpXSm9iMjlyTG1SbFptRjFiSFF1YzNaak1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQW5hK2hsOTB2aW9RaXRCdnZwNnQrSXlmZVBQZ2s1THJMQVIySG51emRkbERuaHJmTVVwYTFXc3RiMVVGOQpKRCtZZ3c5c3RRajFnRjFNQWhqaHBWTldGME9Od3A1NkZnYXZHaEFYN2pjci8zTU1yU0tXMXh4S21xM3FKQTI3Ck1SbTdDaEFBbzU4RUtHUGt6bWptTm9VeHZRcW90ZzVLS0pFdEV2cGQxTHJsY3Y0aVpaUGZkbS9Dam55Q216K2EKL1pVNHZ5MlZGUXZCaWYzVDRXTkl1ZjZRWXE2UVdaVTNtSFZVZnJ6WTBhcnkrNUw0ei95V3pCZUpjY0psRXNkSwpuam56TFZzWWJyNHl1cUY4WUJjdUxPdkIzZEVLdzBTbWwzRWdZTGNxRDQ0Q285UzZJbXQ4QllFSmRsYWh4SVpXClNPU25vM2RUZXpkUHpMV0NIelppRXd3K0pRSURBUUFCbzRHV01JR1RNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVgpIU01FR0RBV2dCUlJxZEJGYzdXeVNJVWJVYzArdzhmUEY4TXl4akF6QmdOVkhSRUVMREFxZ2locmIyNW5MV3R2CmJtY3RkbUZzYVdSaGRHbHZiaTEzWldKb2IyOXJMbVJsWm1GMWJIUXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQkFRQUN5Rlc1end5SDAyWWFQWHRIY3R3b3RDbWJGV2lXRWxXRXJvdTJUa2dvSHc2TmxsUFhQU2lZaWtMZAo1Zk9zTHBkdzNrSnVtWUtPU21jY2Q3MXFPU21POEhWMlZRWXBIQW0vdkZkR3JjbS9qVDZKT2NJa2hRY2YzdURJCjVnbW9WUm9ua3VwMytvR3cySEpWMkYwMXJTektKTk9zNTJralpQdCtNUGZLQUc2Q1JtWFo0NXFHcG9maU4wU2sKNEZaR0JnN1h4SmVpcTMrTDFKOGllNGphdWg5QWFFNEpLdWExdGErZFRNc3ZTMGl2OVBoVHl1bnZtb2ViZGhPRQpUSHVPTDNqS0NwcnJwVVUwbjBHUFQzdlFkSldhZDkwSjlnSXhha25Fc01CV0NSdVZSZ2hCUTJzaFlvcXdXRVpFCmNxRUZFVTlLSnRrbGZYTG9GL0Q4M0E5aFhuKzAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbmEraGw5MHZpb1FpdEJ2dnA2dCtJeWZlUFBnazVMckxBUjJIbnV6ZGRsRG5ocmZNClVwYTFXc3RiMVVGOUpEK1lndzlzdFFqMWdGMU1BaGpocFZOV0YwT053cDU2RmdhdkdoQVg3amNyLzNNTXJTS1cKMXh4S21xM3FKQTI3TVJtN0NoQUFvNThFS0dQa3ptam1Ob1V4dlFxb3RnNUtLSkV0RXZwZDFMcmxjdjRpWlpQZgpkbS9Dam55Q216K2EvWlU0dnkyVkZRdkJpZjNUNFdOSXVmNlFZcTZRV1pVM21IVlVmcnpZMGFyeSs1TDR6L3lXCnpCZUpjY0psRXNkS25qbnpMVnNZYnI0eXVxRjhZQmN1TE92QjNkRUt3MFNtbDNFZ1lMY3FENDRDbzlTNkltdDgKQllFSmRsYWh4SVpXU09Tbm8zZFRlemRQekxXQ0h6WmlFd3crSlFJREFRQUJBb0lCQUZuRWkyekYrWE9VcDZENwpLbUs4aVZHQU44OWp3TFVKOWRtTHN4SnhhOTRZVHNYdHluN1YxeVo2RUt5RjNMVVBFMGJCT0RTVGhoZHVoWC9JCkpHVVczVExmUFV1bkpuOTFqS2Q4cy9Ma0s4TC8veDV0UzR2b1NqeG1kNTNReDFrN2ViUlB5ZDFjQUdUeUFXYlUKWndKd3J4RWNpVkVqTDJxS3d5dERwcmtkTU5SV0hkazJab3Z3SDluY1VpeDFsN3I0MmkwNlNpZTZFUmtZRE1LOApmU2hPYUZ6ZHJpbm45OTVTd0VWWkttem5weWJwYWdqMS95WEtOaXVvNHMrNDNBdm5MTy9ONjExTjdzTW1GR3NPClNtdEtEWjYvYUtTYmxvR0VyaG5GZnVOU1BsMjR5UlBJREdwR01HYkxaS1VXT2Y1MkhrUE5KaVNZUHFKSnR6Zm8KWUQ0N0FBRUNnWUVBMEpQKytFWGlBQzJGaGRUMTh5N3E3anF6T2VXNTh1RlJHOFNLQ0xzazMrUUpoZXZVWXVBVwpiTi84WkxNOHFYVnZkVDRpUUZUZXJNWHRyMnQ2cHpZbGpmMWd6NW5vaHBkWE1QQUpHWDB5V2hHa1RsVUluNUh0ClRxKy9ZOVBlRUVkWThwRnpMb1hDNWNlWTZCZGlWUzhXemFlK1VJY0JnUVhYL2piM0FWeDlQaVVDZ1lFQXdZbUkKY2F6aHNTZjkyd3RidkF1UW5TaUNMc003M3pOOXNwSHB0ak96bFJFanp4SmN6QWdKWkNoaXkwblE5clVQdWJTUApCK0dQbTFlNGlGWFI1L3V4SzZqbW9iVldlbXNFQ09MUGh1Mm5hSGJwZ05aZFlZYUlWL0ZLbW00TE5WWjFQZWVZCjBtOEgwbGFYWXUyeUV0QVJoQWtHUjlOamI1YStEU0RkbEFHakFBRUNnWUVBdnd1UHN1QnZqVElrNXR5Vkd0V1MKb2ZwcVIxRy83Rk9zOHY0bVlMRHBxWms1ajh6ZWtHSW9xRGpRK1h1aXlLU2tIb04yNCszWXQrL2pNWllFbGp2bQpVaFFQSkpnWWY0OEhjZStxcGdvaW9KVWdKZytGQW9PckZUT3Mza2NsVTB2R2tRZmd0SEFZZ0ZjK0d2ZXdQYzRQCjJQY1lQcklxRW4vRHd6bWRMVVlHQVhFQ2dZQmRKdzE5YVhEWURCK3JwclBvdHNoTVhJc01adndTV241TnpOMW8KelVuS25nMVdSY2hVakNtNUE1ZEpzYVhhbVJ1UWpzK3BRM0FUblEwODBkSE9qdDZmM1JQbEVac21JUXc0R3JNNApobnJsVlJiZTVFN2QraHIxK1RXblR3QW1GQThxVktiQjRwOHBKblNITVZGY3JMbEJpL1p4NjlVWWlMM0JJK2lDCnJLY0FBUUtCZ0hyUG1BYnQrakJjOS9TRDJzS1NqN0Zpa3BrVHRGYmJTQmJBUVBoQ0F0eGdPdTZFR1A3Mko0ZlkKMkFhSHhvckNEYituMXQwTE1oQ09EL3pwLytHdlJIMTdLUFdkMkFGUTRTMTZjNmFZY1hFeitEd05CaFZwb2dxaQplTU9NQUVRb1BRREFNYUhmN0lTa0lLQnJ3UVByUWttb0xFVEM2Uit4RWF2TGRWSXJWTU9zCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
  name: kong-kong
rules:

- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants/status
  verbs:
  - get
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-kong
subjects:
  - kind: ServiceAccount
    name: kong-kong
    namespace: default
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kong-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kong-kong
subjects:
  - kind: ServiceAccount
    name: kong-kong
    namespace: default
---
# Source: kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-validation-webhook
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: app
---
# Source: kong/templates/controller-service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-metrics
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
spec:
  ports:
  - name: cmetrics
    port: 10255
    protocol: TCP
    targetPort: cmetrics
  - name: status
    port: 10254
    protocol: TCP
    targetPort: cstatus
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: app
---
# Source: kong/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-manager
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
spec:
  type: NodePort
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  - name: kong-manager-tls
    port: 8445
    targetPort: 8445
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: kong/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-kong-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    enable-metrics: "true"
spec:
  type: NodePort
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    nodePort: 30080
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    nodePort: 30443
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: kong/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-kong
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: app
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "kong"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: kong-kong-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.11"
        app.kubernetes.io/component: app
        app: kong-kong
        
        version: "3.11"
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
      - name: wait-for-db
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        
      
        args: [ "/bin/bash", "-c", "export KONG_NGINX_DAEMON=on KONG_PREFIX=`mktemp -d` KONG_KEYRING_ENABLED=off; until kong start; do echo 'waiting for db'; sleep 1; done; kong stop"]
        volumeMounts:
          - name: kong-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-kong-tmp
            mountPath: /tmp
          
        resources:
          {}
      containers:
      - name: ingress-controller
        securityContext:
      
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        - name: cstatus
          containerPort: 10254
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONGHQ_COM_GLOBAL_PLUGINS
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_URL
          value: "https://localhost:8444"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "default/kong-kong-proxy"
        
        image: kong/kubernetes-ingress-controller:3.5
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: kong-kong-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
      
      - name: "proxy"
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: kong-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-kong-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kong-kong-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: kong-kong-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: kong-kong-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - name: webhook-cert
          secret:
            secretName: kong-kong-validation-webhook-keypair
---
# Source: kong/templates/migrations.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-kong-init-migrations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: init-migrations
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  backoffLimit: 
  template:
    metadata:
      name: kong-init-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.11"
        app.kubernetes.io/component: init-migrations
      annotations:
        sidecar.istio.io/inject: "false"
        kuma.io/service-account-token-volume: kong-kong-token
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      containers:
      - name: kong-migrations
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault 
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        args: [ "kong", "migrations", "bootstrap" ]
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
        
        resources:
          limits:
            cpu: 200m
            ephemeral-storage: 25Mi
            memory: 256Mi
          requests:
            cpu: 100m
            ephemeral-storage: 10Mi
            memory: 128Mi
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: kong-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: kong-kong-validation-webhook-keypair
---
# Source: kong/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: kong-kong-default-validations
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRQU1oR3JqK2d5VVNwOG1ZT3k2TVgxakFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEE0TURreE1EUTNOVEJhRncwegpOVEE0TURjeE1EUTNOVEJhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRiWWVFZm9UV3I1d0lxRUh4YWRBM0hZUFNaNkIKckp1NVFxL1FBZWtlSU1vd2dVM0VRR2dqVm5PTnFvcTBiU2U5Mm9ZaG1SN1VpeUllaXYya1ErUFEyWk5FRXFhTQpoMkEvRDNLWEJhNUFTRnZJeGdmbDNwYmxjUFgxUTRIMDdSSHVrQ1ZTRmxiQmd5V2tjMnE0eWhQQlY2bVFySUplCjBDaDhXNEI4VitiUlRvRi9hbTNMNEdkRnRIUXhMRHdwb2pJdWk3MzVtcUFnMVRpMTVzZlNKWVRkYzdnQkVHd1oKSnFINEdEWGQ2Z2JkYXlSRklMWXFuOE4ydTBYam9ITFlWaFNuMDhHSU05SnFHSVh4RTE3cDlqYm4rUlJWblN0RgpZTWY2emtPd281S2ZIM1ZtZ2hPT1RiSEllT3JYZ3pkT2hwYmhkY1hhYnhaT3V1WDVyV0w2bEl4YVR3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZGR3AwRVZ6dGJKSWhSdFJ6VDdEeDg4WAp3ekxHTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCYVpHZEY3K0dQUzM5NkR2dDNFajdUcmZ6RjNieFZsVjFHClkyNVJ5YUR6ZW92d1FVSVpuTW5hamNiTHpLMEwzcytSWkE5SXFLNHVIOThBdkNsVXJjQkRyR29XK0ZGQVVSd0sKT0pFTk56Zm8wVFVsU0RiNCtGWi9XcU94cU5GbG9ZTmVVdWpqYXVwRjVYQ1labVJRc2dUSXJ4Vy9JZkVLZFVkYQpycHZYUFZUTEwxY01BVHpscENnNnAxTnUzcG5xd05YRHRhdkJOaDI2VWNBQUlTZjRLTWxBd0lLQXhkZmhPaXoyCmRZVXZQZW9sTmRNRStRaUN3ckM5dDVtbkhOaGkyeFVlQXlsTlVPZ041OE0xSTFWNnhxMExWZytDbHVmdllnV1cKNVVHZnpMMGNjUk91dGVoZVpSQ2k5ODhzTlVBVU94N040OHZXb3V6OFVyZTJFRzRmZDUxYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kong-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: "konghq.com/credential"
      operator: "Exists"
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRQU1oR3JqK2d5VVNwOG1ZT3k2TVgxakFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEE0TURreE1EUTNOVEJhRncwegpOVEE0TURjeE1EUTNOVEJhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRiWWVFZm9UV3I1d0lxRUh4YWRBM0hZUFNaNkIKckp1NVFxL1FBZWtlSU1vd2dVM0VRR2dqVm5PTnFvcTBiU2U5Mm9ZaG1SN1VpeUllaXYya1ErUFEyWk5FRXFhTQpoMkEvRDNLWEJhNUFTRnZJeGdmbDNwYmxjUFgxUTRIMDdSSHVrQ1ZTRmxiQmd5V2tjMnE0eWhQQlY2bVFySUplCjBDaDhXNEI4VitiUlRvRi9hbTNMNEdkRnRIUXhMRHdwb2pJdWk3MzVtcUFnMVRpMTVzZlNKWVRkYzdnQkVHd1oKSnFINEdEWGQ2Z2JkYXlSRklMWXFuOE4ydTBYam9ITFlWaFNuMDhHSU05SnFHSVh4RTE3cDlqYm4rUlJWblN0RgpZTWY2emtPd281S2ZIM1ZtZ2hPT1RiSEllT3JYZ3pkT2hwYmhkY1hhYnhaT3V1WDVyV0w2bEl4YVR3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZGR3AwRVZ6dGJKSWhSdFJ6VDdEeDg4WAp3ekxHTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCYVpHZEY3K0dQUzM5NkR2dDNFajdUcmZ6RjNieFZsVjFHClkyNVJ5YUR6ZW92d1FVSVpuTW5hamNiTHpLMEwzcytSWkE5SXFLNHVIOThBdkNsVXJjQkRyR29XK0ZGQVVSd0sKT0pFTk56Zm8wVFVsU0RiNCtGWi9XcU94cU5GbG9ZTmVVdWpqYXVwRjVYQ1labVJRc2dUSXJ4Vy9JZkVLZFVkYQpycHZYUFZUTEwxY01BVHpscENnNnAxTnUzcG5xd05YRHRhdkJOaDI2VWNBQUlTZjRLTWxBd0lLQXhkZmhPaXoyCmRZVXZQZW9sTmRNRStRaUN3ckM5dDVtbkhOaGkyeFVlQXlsTlVPZ041OE0xSTFWNnhxMExWZytDbHVmdllnV1cKNVVHZnpMMGNjUk91dGVoZVpSQ2k5ODhzTlVBVU94N040OHZXb3V6OFVyZTJFRzRmZDUxYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kong-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- name: validations.kong.konghq.com
  matchPolicy: Equivalent
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
      - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - 'v1alpha2'
    - 'v1beta1'
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRQU1oR3JqK2d5VVNwOG1ZT3k2TVgxakFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOVEE0TURreE1EUTNOVEJhRncwegpOVEE0TURjeE1EUTNOVEJhTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRiWWVFZm9UV3I1d0lxRUh4YWRBM0hZUFNaNkIKckp1NVFxL1FBZWtlSU1vd2dVM0VRR2dqVm5PTnFvcTBiU2U5Mm9ZaG1SN1VpeUllaXYya1ErUFEyWk5FRXFhTQpoMkEvRDNLWEJhNUFTRnZJeGdmbDNwYmxjUFgxUTRIMDdSSHVrQ1ZTRmxiQmd5V2tjMnE0eWhQQlY2bVFySUplCjBDaDhXNEI4VitiUlRvRi9hbTNMNEdkRnRIUXhMRHdwb2pJdWk3MzVtcUFnMVRpMTVzZlNKWVRkYzdnQkVHd1oKSnFINEdEWGQ2Z2JkYXlSRklMWXFuOE4ydTBYam9ITFlWaFNuMDhHSU05SnFHSVh4RTE3cDlqYm4rUlJWblN0RgpZTWY2emtPd281S2ZIM1ZtZ2hPT1RiSEllT3JYZ3pkT2hwYmhkY1hhYnhaT3V1WDVyV0w2bEl4YVR3SURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZGR3AwRVZ6dGJKSWhSdFJ6VDdEeDg4WAp3ekxHTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCYVpHZEY3K0dQUzM5NkR2dDNFajdUcmZ6RjNieFZsVjFHClkyNVJ5YUR6ZW92d1FVSVpuTW5hamNiTHpLMEwzcytSWkE5SXFLNHVIOThBdkNsVXJjQkRyR29XK0ZGQVVSd0sKT0pFTk56Zm8wVFVsU0RiNCtGWi9XcU94cU5GbG9ZTmVVdWpqYXVwRjVYQ1labVJRc2dUSXJ4Vy9JZkVLZFVkYQpycHZYUFZUTEwxY01BVHpscENnNnAxTnUzcG5xd05YRHRhdkJOaDI2VWNBQUlTZjRLTWxBd0lLQXhkZmhPaXoyCmRZVXZQZW9sTmRNRStRaUN3ckM5dDVtbkhOaGkyeFVlQXlsTlVPZ041OE0xSTFWNnhxMExWZytDbHVmdllnV1cKNVVHZnpMMGNjUk91dGVoZVpSQ2k5ODhzTlVBVU94N040OHZXb3V6OFVyZTJFRzRmZDUxYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kong-kong-validation-webhook
      namespace: default
---
# Source: kong/templates/migrations-post-upgrade.yaml
# Why is this Job duplicated and not using only helm hooks?
# See: https://github.com/helm/charts/pull/7362
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-kong-post-upgrade-migrations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: post-upgrade-migrations
  annotations:
    helm.sh/hook: "post-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
spec:
  backoffLimit: 
  template:
    metadata:
      name: kong-post-upgrade-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.11"
        app.kubernetes.io/component: post-upgrade-migrations
      annotations:
        sidecar.istio.io/inject: "false"
        kuma.io/service-account-token-volume: kong-kong-token
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      containers:
      - name: kong-post-upgrade-migrations
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault 
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        args: [ "kong", "migrations", "finish" ]
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
        
        resources:
          limits:
            cpu: 200m
            ephemeral-storage: 25Mi
            memory: 256Mi
          requests:
            cpu: 100m
            ephemeral-storage: 10Mi
            memory: 128Mi
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: kong-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: kong-kong-validation-webhook-keypair
---
# Source: kong/templates/migrations-pre-upgrade.yaml
# Why is this Job duplicated and not using only helm hooks?
# See: https://github.com/helm/charts/pull/7362
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-kong-pre-upgrade-migrations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.51.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.11"
    app.kubernetes.io/component: pre-upgrade-migrations
  annotations:
    helm.sh/hook: "pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  backoffLimit: 
  template:
    metadata:
      name: kong-pre-upgrade-migrations
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.51.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.11"
        app.kubernetes.io/component: pre-upgrade-migrations
      annotations:
        sidecar.istio.io/inject: "false"
        kuma.io/service-account-token-volume: kong-kong-token
    spec:
      serviceAccountName: kong-kong
      automountServiceAccountToken: false
      
      containers:
      - name: kong-upgrade-migrations
        image: localhost:5000/kong-oidc:3.11-ubuntu
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_KIC
          value: "on"
        - name: KONG_KONG_HEADERS_UPSTREAM
          value: "X-Forwarded-Proto:https,X-Forwarded-Host:$host"
        - name: KONG_KONG_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oidc-client-secret
        - name: KONG_KONG_REAL_IP_HEADER
          value: "X-Forwarded-For"
        - name: KONG_KONG_REAL_IP_RECURSIVE
          value: "on"
        - name: KONG_KONG_TRUSTED_IPS
          value: "103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "app"
        - name: KONG_PG_HOST
          value: "pg-cluster-rw.default.svc.cluster.local"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pg-cluster-app
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: pg-cluster-app
        - name: KONG_PLUGINS
          value: "bundled,oidcify,cors,rate-limiting,ip-restriction"
        - name: KONG_PLUGINSERVER_NAMES
          value: "oidcify"
        - name: KONG_PLUGINSERVER_OIDCIFY_QUERY_CMD
          value: "/usr/local/bin/oidcify -dump"
        - name: KONG_PLUGINSERVER_OIDCIFY_START_CMD
          value: "/usr/local/bin/oidcify -kong-prefix /kong_prefix"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: KONG_REDIS_PORT
          value: "6379"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_VAULT_ENV_PREFIX
          value: "KONG_"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        args: [ "kong", "migrations", "up" ]
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
        
        resources:
          limits:
            cpu: 200m
            ephemeral-storage: 25Mi
            memory: 256Mi
          requests:
            cpu: 100m
            ephemeral-storage: 10Mi
            memory: 128Mi
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: kong-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: kong-kong-validation-webhook-keypair
